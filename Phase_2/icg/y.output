Terminals unused in grammar

    T_lteq
    T_gteq
    T_neq
    T_noteq
    T_eqeq
    T_incr
    T_decr
    BREAK
    CONTINUE


State 17 conflicts: 10 shift/reduce
State 30 conflicts: 11 shift/reduce
State 46 conflicts: 3 reduce/reduce
State 119 conflicts: 4 reduce/reduce
State 120 conflicts: 4 reduce/reduce
State 150 conflicts: 10 shift/reduce
State 171 conflicts: 11 shift/reduce


Grammar

    0 $accept: S $end

    1 S: START

    2 START: INCLUDE T_lt H T_gt MAIN
    3      | INCLUDE T_QUOTE H T_QUOTE MAIN

    4 MAIN: VOID MAINTOK BODY
    5     | INT MAINTOK BODY

    6 BODY: '{' C '}'

    7 C: C statement ';'
    8  | C LOOPS
    9  | statement ';'
   10  | LOOPS

   11 $@1: %empty

   12 $@2: %empty

   13 LOOPS: WHILE $@1 '(' COND ')' $@2 LOOPBODY

   14 $@3: %empty

   15 $@4: %empty

   16 $@5: %empty

   17 LOOPS: FOR '(' ASSIGN_EXPR $@3 ';' COND $@4 ';' statement $@5 ')' LOOPBODY

   18 $@6: %empty

   19 $@7: %empty

   20 LOOPS: IF '(' COND ')' $@6 LOOPBODY $@7 ELSE LOOPBODY
   21      | %empty

   22 $@8: %empty

   23 $@9: %empty

   24 TERNARY_EXPR: '(' TERNARY_COND ')' $@8 T_ques statement $@9 T_colon statement

   25 LOOPBODY: '{' LOOPC '}'
   26         | ';'
   27         | statement ';'

   28 LOOPC: LOOPC statement ';'
   29      | LOOPC LOOPS
   30      | statement ';'
   31      | LOOPS

   32 statement: ASSIGN_EXPR
   33          | EXP
   34          | TERNARY_EXPR
   35          | PRINT

   36 TERNARY_COND: T_B

   37 $@10: %empty

   38 TERNARY_COND: T_B T_and $@10 TERNARY_COND

   39 $@11: %empty

   40 TERNARY_COND: T_B $@11 T_or TERNARY_COND
   41             | T_not T_B

   42 $@12: %empty

   43 $@13: %empty

   44 T_B: T_V T_eq $@12 T_eq $@13 LIT

   45 $@14: %empty

   46 T_B: T_V T_gt $@14 T_F

   47 $@15: %empty

   48 T_B: T_V T_lt $@15 T_F

   49 $@16: %empty

   50 $@17: %empty

   51 T_B: T_V T_not $@16 T_eq $@17 LIT
   52    | '(' T_B ')'
   53    | T_V

   54 $@18: %empty

   55 T_F: T_eq $@18 LIT
   56    | LIT

   57 COND: B

   58 $@19: %empty

   59 COND: B T_and $@19 COND

   60 $@20: %empty

   61 COND: B $@20 T_or COND
   62     | T_not B

   63 $@21: %empty

   64 $@22: %empty

   65 B: V T_eq $@21 T_eq $@22 LIT

   66 $@23: %empty

   67 B: V T_gt $@23 F

   68 $@24: %empty

   69 B: V T_lt $@24 F

   70 $@25: %empty

   71 $@26: %empty

   72 B: V T_not $@25 T_eq $@26 LIT
   73  | '(' B ')'
   74  | V

   75 $@27: %empty

   76 F: T_eq $@27 LIT
   77  | LIT

   78 V: ID

   79 T_V: ID

   80 $@28: %empty

   81 $@29: %empty

   82 ASSIGN_EXPR: LIT $@28 T_eq $@29 EXP

   83 $@30: %empty

   84 $@31: %empty

   85 ASSIGN_EXPR: TYPE LIT $@30 T_eq $@31 EXP

   86 EXP: ADDSUB

   87 $@32: %empty

   88 EXP: EXP T_lt $@32 ADDSUB

   89 $@33: %empty

   90 EXP: EXP T_gt $@33 ADDSUB

   91 ADDSUB: TERM

   92 $@34: %empty

   93 ADDSUB: EXP T_pl $@34 TERM

   94 $@35: %empty

   95 ADDSUB: EXP T_min $@35 TERM

   96 TERM: FACTOR

   97 $@36: %empty

   98 TERM: TERM T_mul $@36 FACTOR

   99 $@37: %empty

  100 TERM: TERM T_div $@37 FACTOR

  101 FACTOR: LIT
  102       | '(' EXP ')'

  103 PRINT: COUT T_lt T_lt STRING
  104      | COUT T_lt T_lt STRING T_lt T_lt ENDL

  105 LIT: ID
  106    | NUM

  107 TYPE: INT
  108     | CHAR
  109     | FLOAT


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 13 17 20 24 52 73 102
    ')' (41) 13 17 20 24 52 73 102
    ';' (59) 7 9 17 26 27 28 30
    '{' (123) 6 25
    '}' (125) 6 25
    error (256)
    ID (258) 78 79 105
    NUM (259) 106
    T_lt (260) 2 48 69 88 103 104
    T_gt (261) 2 46 67 90
    T_lteq (262)
    T_gteq (263)
    T_neq (264)
    T_noteq (265)
    T_eqeq (266)
    T_and (267) 38 59
    T_or (268) 40 61
    T_incr (269)
    T_decr (270)
    T_not (271) 41 51 62 72
    T_eq (272) 44 51 55 65 72 76 82 85
    WHILE (273) 13
    INT (274) 5 107
    CHAR (275) 108
    FLOAT (276) 109
    VOID (277) 4
    H (278) 2 3
    MAINTOK (279) 4 5
    INCLUDE (280) 2 3
    BREAK (281)
    CONTINUE (282)
    IF (283) 20
    ELSE (284) 20
    COUT (285) 103 104
    STRING (286) 103 104
    FOR (287) 17
    ENDL (288) 104
    T_ques (289) 24
    T_colon (290) 24
    T_QUOTE (291) 3
    T_pl (292) 93
    T_min (293) 95
    T_mul (294) 98
    T_div (295) 100


Nonterminals, with rules where they appear

    $accept (46)
        on left: 0
    S (47)
        on left: 1
        on right: 0
    START (48)
        on left: 2 3
        on right: 1
    MAIN (49)
        on left: 4 5
        on right: 2 3
    BODY (50)
        on left: 6
        on right: 4 5
    C (51)
        on left: 7 8 9 10
        on right: 6 7 8
    LOOPS (52)
        on left: 13 17 20 21
        on right: 8 10 29 31
    $@1 (53)
        on left: 11
        on right: 13
    $@2 (54)
        on left: 12
        on right: 13
    $@3 (55)
        on left: 14
        on right: 17
    $@4 (56)
        on left: 15
        on right: 17
    $@5 (57)
        on left: 16
        on right: 17
    $@6 (58)
        on left: 18
        on right: 20
    $@7 (59)
        on left: 19
        on right: 20
    TERNARY_EXPR (60)
        on left: 24
        on right: 34
    $@8 (61)
        on left: 22
        on right: 24
    $@9 (62)
        on left: 23
        on right: 24
    LOOPBODY (63)
        on left: 25 26 27
        on right: 13 17 20
    LOOPC (64)
        on left: 28 29 30 31
        on right: 25 28 29
    statement (65)
        on left: 32 33 34 35
        on right: 7 9 17 24 27 28 30
    TERNARY_COND (66)
        on left: 36 38 40 41
        on right: 24 38 40
    $@10 (67)
        on left: 37
        on right: 38
    $@11 (68)
        on left: 39
        on right: 40
    T_B (69)
        on left: 44 46 48 51 52 53
        on right: 36 38 40 41 52
    $@12 (70)
        on left: 42
        on right: 44
    $@13 (71)
        on left: 43
        on right: 44
    $@14 (72)
        on left: 45
        on right: 46
    $@15 (73)
        on left: 47
        on right: 48
    $@16 (74)
        on left: 49
        on right: 51
    $@17 (75)
        on left: 50
        on right: 51
    T_F (76)
        on left: 55 56
        on right: 46 48
    $@18 (77)
        on left: 54
        on right: 55
    COND (78)
        on left: 57 59 61 62
        on right: 13 17 20 59 61
    $@19 (79)
        on left: 58
        on right: 59
    $@20 (80)
        on left: 60
        on right: 61
    B (81)
        on left: 65 67 69 72 73 74
        on right: 57 59 61 62 73
    $@21 (82)
        on left: 63
        on right: 65
    $@22 (83)
        on left: 64
        on right: 65
    $@23 (84)
        on left: 66
        on right: 67
    $@24 (85)
        on left: 68
        on right: 69
    $@25 (86)
        on left: 70
        on right: 72
    $@26 (87)
        on left: 71
        on right: 72
    F (88)
        on left: 76 77
        on right: 67 69
    $@27 (89)
        on left: 75
        on right: 76
    V (90)
        on left: 78
        on right: 65 67 69 72 74
    T_V (91)
        on left: 79
        on right: 44 46 48 51 53
    ASSIGN_EXPR (92)
        on left: 82 85
        on right: 17 32
    $@28 (93)
        on left: 80
        on right: 82
    $@29 (94)
        on left: 81
        on right: 82
    $@30 (95)
        on left: 83
        on right: 85
    $@31 (96)
        on left: 84
        on right: 85
    EXP (97)
        on left: 86 88 90
        on right: 33 82 85 88 90 93 95 102
    $@32 (98)
        on left: 87
        on right: 88
    $@33 (99)
        on left: 89
        on right: 90
    ADDSUB (100)
        on left: 91 93 95
        on right: 86 88 90
    $@34 (101)
        on left: 92
        on right: 93
    $@35 (102)
        on left: 94
        on right: 95
    TERM (103)
        on left: 96 98 100
        on right: 91 93 95 98 100
    $@36 (104)
        on left: 97
        on right: 98
    $@37 (105)
        on left: 99
        on right: 100
    FACTOR (106)
        on left: 101 102
        on right: 96 98 100
    PRINT (107)
        on left: 103 104
        on right: 35
    LIT (108)
        on left: 105 106
        on right: 44 51 55 56 65 72 76 77 82 85 101
    TYPE (109)
        on left: 107 108 109
        on right: 85


State 0

    0 $accept: . S $end

    INCLUDE  shift, and go to state 1

    S      go to state 2
    START  go to state 3


State 1

    2 START: INCLUDE . T_lt H T_gt MAIN
    3      | INCLUDE . T_QUOTE H T_QUOTE MAIN

    T_lt     shift, and go to state 4
    T_QUOTE  shift, and go to state 5


State 2

    0 $accept: S . $end

    $end  shift, and go to state 6


State 3

    1 S: START .

    $default  reduce using rule 1 (S)


State 4

    2 START: INCLUDE T_lt . H T_gt MAIN

    H  shift, and go to state 7


State 5

    3 START: INCLUDE T_QUOTE . H T_QUOTE MAIN

    H  shift, and go to state 8


State 6

    0 $accept: S $end .

    $default  accept


State 7

    2 START: INCLUDE T_lt H . T_gt MAIN

    T_gt  shift, and go to state 9


State 8

    3 START: INCLUDE T_QUOTE H . T_QUOTE MAIN

    T_QUOTE  shift, and go to state 10


State 9

    2 START: INCLUDE T_lt H T_gt . MAIN

    INT   shift, and go to state 11
    VOID  shift, and go to state 12

    MAIN  go to state 13


State 10

    3 START: INCLUDE T_QUOTE H T_QUOTE . MAIN

    INT   shift, and go to state 11
    VOID  shift, and go to state 12

    MAIN  go to state 14


State 11

    5 MAIN: INT . MAINTOK BODY

    MAINTOK  shift, and go to state 15


State 12

    4 MAIN: VOID . MAINTOK BODY

    MAINTOK  shift, and go to state 16


State 13

    2 START: INCLUDE T_lt H T_gt MAIN .

    $default  reduce using rule 2 (START)


State 14

    3 START: INCLUDE T_QUOTE H T_QUOTE MAIN .

    $default  reduce using rule 3 (START)


State 15

    5 MAIN: INT MAINTOK . BODY

    '{'  shift, and go to state 17

    BODY  go to state 18


State 16

    4 MAIN: VOID MAINTOK . BODY

    '{'  shift, and go to state 17

    BODY  go to state 19


State 17

    6 BODY: '{' . C '}'

    ID     shift, and go to state 20
    NUM    shift, and go to state 21
    WHILE  shift, and go to state 22
    INT    shift, and go to state 23
    CHAR   shift, and go to state 24
    FLOAT  shift, and go to state 25
    IF     shift, and go to state 26
    COUT   shift, and go to state 27
    FOR    shift, and go to state 28
    '('    shift, and go to state 29

    ID        [reduce using rule 21 (LOOPS)]
    NUM       [reduce using rule 21 (LOOPS)]
    WHILE     [reduce using rule 21 (LOOPS)]
    INT       [reduce using rule 21 (LOOPS)]
    CHAR      [reduce using rule 21 (LOOPS)]
    FLOAT     [reduce using rule 21 (LOOPS)]
    IF        [reduce using rule 21 (LOOPS)]
    COUT      [reduce using rule 21 (LOOPS)]
    FOR       [reduce using rule 21 (LOOPS)]
    '('       [reduce using rule 21 (LOOPS)]
    $default  reduce using rule 21 (LOOPS)

    C             go to state 30
    LOOPS         go to state 31
    TERNARY_EXPR  go to state 32
    statement     go to state 33
    ASSIGN_EXPR   go to state 34
    EXP           go to state 35
    ADDSUB        go to state 36
    TERM          go to state 37
    FACTOR        go to state 38
    PRINT         go to state 39
    LIT           go to state 40
    TYPE          go to state 41


State 18

    5 MAIN: INT MAINTOK BODY .

    $default  reduce using rule 5 (MAIN)


State 19

    4 MAIN: VOID MAINTOK BODY .

    $default  reduce using rule 4 (MAIN)


State 20

  105 LIT: ID .

    $default  reduce using rule 105 (LIT)


State 21

  106 LIT: NUM .

    $default  reduce using rule 106 (LIT)


State 22

   13 LOOPS: WHILE . $@1 '(' COND ')' $@2 LOOPBODY

    $default  reduce using rule 11 ($@1)

    $@1  go to state 42


State 23

  107 TYPE: INT .

    $default  reduce using rule 107 (TYPE)


State 24

  108 TYPE: CHAR .

    $default  reduce using rule 108 (TYPE)


State 25

  109 TYPE: FLOAT .

    $default  reduce using rule 109 (TYPE)


State 26

   20 LOOPS: IF . '(' COND ')' $@6 LOOPBODY $@7 ELSE LOOPBODY

    '('  shift, and go to state 43


State 27

  103 PRINT: COUT . T_lt T_lt STRING
  104      | COUT . T_lt T_lt STRING T_lt T_lt ENDL

    T_lt  shift, and go to state 44


State 28

   17 LOOPS: FOR . '(' ASSIGN_EXPR $@3 ';' COND $@4 ';' statement $@5 ')' LOOPBODY

    '('  shift, and go to state 45


State 29

   24 TERNARY_EXPR: '(' . TERNARY_COND ')' $@8 T_ques statement $@9 T_colon statement
  102 FACTOR: '(' . EXP ')'

    ID     shift, and go to state 46
    NUM    shift, and go to state 21
    T_not  shift, and go to state 47
    '('    shift, and go to state 48

    TERNARY_COND  go to state 49
    T_B           go to state 50
    T_V           go to state 51
    EXP           go to state 52
    ADDSUB        go to state 36
    TERM          go to state 37
    FACTOR        go to state 38
    LIT           go to state 53


State 30

    6 BODY: '{' C . '}'
    7 C: C . statement ';'
    8  | C . LOOPS

    ID     shift, and go to state 20
    NUM    shift, and go to state 21
    WHILE  shift, and go to state 22
    INT    shift, and go to state 23
    CHAR   shift, and go to state 24
    FLOAT  shift, and go to state 25
    IF     shift, and go to state 26
    COUT   shift, and go to state 27
    FOR    shift, and go to state 28
    '}'    shift, and go to state 54
    '('    shift, and go to state 29

    ID     [reduce using rule 21 (LOOPS)]
    NUM    [reduce using rule 21 (LOOPS)]
    WHILE  [reduce using rule 21 (LOOPS)]
    INT    [reduce using rule 21 (LOOPS)]
    CHAR   [reduce using rule 21 (LOOPS)]
    FLOAT  [reduce using rule 21 (LOOPS)]
    IF     [reduce using rule 21 (LOOPS)]
    COUT   [reduce using rule 21 (LOOPS)]
    FOR    [reduce using rule 21 (LOOPS)]
    '}'    [reduce using rule 21 (LOOPS)]
    '('    [reduce using rule 21 (LOOPS)]

    LOOPS         go to state 55
    TERNARY_EXPR  go to state 32
    statement     go to state 56
    ASSIGN_EXPR   go to state 34
    EXP           go to state 35
    ADDSUB        go to state 36
    TERM          go to state 37
    FACTOR        go to state 38
    PRINT         go to state 39
    LIT           go to state 40
    TYPE          go to state 41


State 31

   10 C: LOOPS .

    $default  reduce using rule 10 (C)


State 32

   34 statement: TERNARY_EXPR .

    $default  reduce using rule 34 (statement)


State 33

    9 C: statement . ';'

    ';'  shift, and go to state 57


State 34

   32 statement: ASSIGN_EXPR .

    $default  reduce using rule 32 (statement)


State 35

   33 statement: EXP .
   88 EXP: EXP . T_lt $@32 ADDSUB
   90    | EXP . T_gt $@33 ADDSUB
   93 ADDSUB: EXP . T_pl $@34 TERM
   95       | EXP . T_min $@35 TERM

    T_lt   shift, and go to state 58
    T_gt   shift, and go to state 59
    T_pl   shift, and go to state 60
    T_min  shift, and go to state 61

    $default  reduce using rule 33 (statement)


State 36

   86 EXP: ADDSUB .

    $default  reduce using rule 86 (EXP)


State 37

   91 ADDSUB: TERM .
   98 TERM: TERM . T_mul $@36 FACTOR
  100     | TERM . T_div $@37 FACTOR

    T_mul  shift, and go to state 62
    T_div  shift, and go to state 63

    $default  reduce using rule 91 (ADDSUB)


State 38

   96 TERM: FACTOR .

    $default  reduce using rule 96 (TERM)


State 39

   35 statement: PRINT .

    $default  reduce using rule 35 (statement)


State 40

   82 ASSIGN_EXPR: LIT . $@28 T_eq $@29 EXP
  101 FACTOR: LIT .

    T_eq      reduce using rule 80 ($@28)
    $default  reduce using rule 101 (FACTOR)

    $@28  go to state 64


State 41

   85 ASSIGN_EXPR: TYPE . LIT $@30 T_eq $@31 EXP

    ID   shift, and go to state 20
    NUM  shift, and go to state 21

    LIT  go to state 65


State 42

   13 LOOPS: WHILE $@1 . '(' COND ')' $@2 LOOPBODY

    '('  shift, and go to state 66


State 43

   20 LOOPS: IF '(' . COND ')' $@6 LOOPBODY $@7 ELSE LOOPBODY

    ID     shift, and go to state 67
    T_not  shift, and go to state 68
    '('    shift, and go to state 69

    COND  go to state 70
    B     go to state 71
    V     go to state 72


State 44

  103 PRINT: COUT T_lt . T_lt STRING
  104      | COUT T_lt . T_lt STRING T_lt T_lt ENDL

    T_lt  shift, and go to state 73


State 45

   17 LOOPS: FOR '(' . ASSIGN_EXPR $@3 ';' COND $@4 ';' statement $@5 ')' LOOPBODY

    ID     shift, and go to state 20
    NUM    shift, and go to state 21
    INT    shift, and go to state 23
    CHAR   shift, and go to state 24
    FLOAT  shift, and go to state 25

    ASSIGN_EXPR  go to state 74
    LIT          go to state 75
    TYPE         go to state 41


State 46

   79 T_V: ID .
  105 LIT: ID .

    T_lt      reduce using rule 79 (T_V)
    T_lt      [reduce using rule 105 (LIT)]
    T_gt      reduce using rule 79 (T_V)
    T_gt      [reduce using rule 105 (LIT)]
    T_pl      reduce using rule 105 (LIT)
    T_min     reduce using rule 105 (LIT)
    T_mul     reduce using rule 105 (LIT)
    T_div     reduce using rule 105 (LIT)
    ')'       reduce using rule 79 (T_V)
    ')'       [reduce using rule 105 (LIT)]
    $default  reduce using rule 79 (T_V)


State 47

   41 TERNARY_COND: T_not . T_B

    ID   shift, and go to state 76
    '('  shift, and go to state 77

    T_B  go to state 78
    T_V  go to state 51


State 48

   52 T_B: '(' . T_B ')'
  102 FACTOR: '(' . EXP ')'

    ID   shift, and go to state 46
    NUM  shift, and go to state 21
    '('  shift, and go to state 48

    T_B     go to state 79
    T_V     go to state 51
    EXP     go to state 52
    ADDSUB  go to state 36
    TERM    go to state 37
    FACTOR  go to state 38
    LIT     go to state 53


State 49

   24 TERNARY_EXPR: '(' TERNARY_COND . ')' $@8 T_ques statement $@9 T_colon statement

    ')'  shift, and go to state 80


State 50

   36 TERNARY_COND: T_B .
   38             | T_B . T_and $@10 TERNARY_COND
   40             | T_B . $@11 T_or TERNARY_COND

    T_and  shift, and go to state 81

    T_or      reduce using rule 39 ($@11)
    $default  reduce using rule 36 (TERNARY_COND)

    $@11  go to state 82


State 51

   44 T_B: T_V . T_eq $@12 T_eq $@13 LIT
   46    | T_V . T_gt $@14 T_F
   48    | T_V . T_lt $@15 T_F
   51    | T_V . T_not $@16 T_eq $@17 LIT
   53    | T_V .

    T_lt   shift, and go to state 83
    T_gt   shift, and go to state 84
    T_not  shift, and go to state 85
    T_eq   shift, and go to state 86

    $default  reduce using rule 53 (T_B)


State 52

   88 EXP: EXP . T_lt $@32 ADDSUB
   90    | EXP . T_gt $@33 ADDSUB
   93 ADDSUB: EXP . T_pl $@34 TERM
   95       | EXP . T_min $@35 TERM
  102 FACTOR: '(' EXP . ')'

    T_lt   shift, and go to state 58
    T_gt   shift, and go to state 59
    T_pl   shift, and go to state 60
    T_min  shift, and go to state 61
    ')'    shift, and go to state 87


State 53

  101 FACTOR: LIT .

    $default  reduce using rule 101 (FACTOR)


State 54

    6 BODY: '{' C '}' .

    $default  reduce using rule 6 (BODY)


State 55

    8 C: C LOOPS .

    $default  reduce using rule 8 (C)


State 56

    7 C: C statement . ';'

    ';'  shift, and go to state 88


State 57

    9 C: statement ';' .

    $default  reduce using rule 9 (C)


State 58

   88 EXP: EXP T_lt . $@32 ADDSUB

    $default  reduce using rule 87 ($@32)

    $@32  go to state 89


State 59

   90 EXP: EXP T_gt . $@33 ADDSUB

    $default  reduce using rule 89 ($@33)

    $@33  go to state 90


State 60

   93 ADDSUB: EXP T_pl . $@34 TERM

    $default  reduce using rule 92 ($@34)

    $@34  go to state 91


State 61

   95 ADDSUB: EXP T_min . $@35 TERM

    $default  reduce using rule 94 ($@35)

    $@35  go to state 92


State 62

   98 TERM: TERM T_mul . $@36 FACTOR

    $default  reduce using rule 97 ($@36)

    $@36  go to state 93


State 63

  100 TERM: TERM T_div . $@37 FACTOR

    $default  reduce using rule 99 ($@37)

    $@37  go to state 94


State 64

   82 ASSIGN_EXPR: LIT $@28 . T_eq $@29 EXP

    T_eq  shift, and go to state 95


State 65

   85 ASSIGN_EXPR: TYPE LIT . $@30 T_eq $@31 EXP

    $default  reduce using rule 83 ($@30)

    $@30  go to state 96


State 66

   13 LOOPS: WHILE $@1 '(' . COND ')' $@2 LOOPBODY

    ID     shift, and go to state 67
    T_not  shift, and go to state 68
    '('    shift, and go to state 69

    COND  go to state 97
    B     go to state 71
    V     go to state 72


State 67

   78 V: ID .

    $default  reduce using rule 78 (V)


State 68

   62 COND: T_not . B

    ID   shift, and go to state 67
    '('  shift, and go to state 69

    B  go to state 98
    V  go to state 72


State 69

   73 B: '(' . B ')'

    ID   shift, and go to state 67
    '('  shift, and go to state 69

    B  go to state 99
    V  go to state 72


State 70

   20 LOOPS: IF '(' COND . ')' $@6 LOOPBODY $@7 ELSE LOOPBODY

    ')'  shift, and go to state 100


State 71

   57 COND: B .
   59     | B . T_and $@19 COND
   61     | B . $@20 T_or COND

    T_and  shift, and go to state 101

    T_or      reduce using rule 60 ($@20)
    $default  reduce using rule 57 (COND)

    $@20  go to state 102


State 72

   65 B: V . T_eq $@21 T_eq $@22 LIT
   67  | V . T_gt $@23 F
   69  | V . T_lt $@24 F
   72  | V . T_not $@25 T_eq $@26 LIT
   74  | V .

    T_lt   shift, and go to state 103
    T_gt   shift, and go to state 104
    T_not  shift, and go to state 105
    T_eq   shift, and go to state 106

    $default  reduce using rule 74 (B)


State 73

  103 PRINT: COUT T_lt T_lt . STRING
  104      | COUT T_lt T_lt . STRING T_lt T_lt ENDL

    STRING  shift, and go to state 107


State 74

   17 LOOPS: FOR '(' ASSIGN_EXPR . $@3 ';' COND $@4 ';' statement $@5 ')' LOOPBODY

    $default  reduce using rule 14 ($@3)

    $@3  go to state 108


State 75

   82 ASSIGN_EXPR: LIT . $@28 T_eq $@29 EXP

    $default  reduce using rule 80 ($@28)

    $@28  go to state 64


State 76

   79 T_V: ID .

    $default  reduce using rule 79 (T_V)


State 77

   52 T_B: '(' . T_B ')'

    ID   shift, and go to state 76
    '('  shift, and go to state 77

    T_B  go to state 79
    T_V  go to state 51


State 78

   41 TERNARY_COND: T_not T_B .

    $default  reduce using rule 41 (TERNARY_COND)


State 79

   52 T_B: '(' T_B . ')'

    ')'  shift, and go to state 109


State 80

   24 TERNARY_EXPR: '(' TERNARY_COND ')' . $@8 T_ques statement $@9 T_colon statement

    $default  reduce using rule 22 ($@8)

    $@8  go to state 110


State 81

   38 TERNARY_COND: T_B T_and . $@10 TERNARY_COND

    $default  reduce using rule 37 ($@10)

    $@10  go to state 111


State 82

   40 TERNARY_COND: T_B $@11 . T_or TERNARY_COND

    T_or  shift, and go to state 112


State 83

   48 T_B: T_V T_lt . $@15 T_F

    $default  reduce using rule 47 ($@15)

    $@15  go to state 113


State 84

   46 T_B: T_V T_gt . $@14 T_F

    $default  reduce using rule 45 ($@14)

    $@14  go to state 114


State 85

   51 T_B: T_V T_not . $@16 T_eq $@17 LIT

    $default  reduce using rule 49 ($@16)

    $@16  go to state 115


State 86

   44 T_B: T_V T_eq . $@12 T_eq $@13 LIT

    $default  reduce using rule 42 ($@12)

    $@12  go to state 116


State 87

  102 FACTOR: '(' EXP ')' .

    $default  reduce using rule 102 (FACTOR)


State 88

    7 C: C statement ';' .

    $default  reduce using rule 7 (C)


State 89

   88 EXP: EXP T_lt $@32 . ADDSUB

    ID   shift, and go to state 20
    NUM  shift, and go to state 21
    '('  shift, and go to state 117

    EXP     go to state 118
    ADDSUB  go to state 119
    TERM    go to state 37
    FACTOR  go to state 38
    LIT     go to state 53


State 90

   90 EXP: EXP T_gt $@33 . ADDSUB

    ID   shift, and go to state 20
    NUM  shift, and go to state 21
    '('  shift, and go to state 117

    EXP     go to state 118
    ADDSUB  go to state 120
    TERM    go to state 37
    FACTOR  go to state 38
    LIT     go to state 53


State 91

   93 ADDSUB: EXP T_pl $@34 . TERM

    ID   shift, and go to state 20
    NUM  shift, and go to state 21
    '('  shift, and go to state 117

    TERM    go to state 121
    FACTOR  go to state 38
    LIT     go to state 53


State 92

   95 ADDSUB: EXP T_min $@35 . TERM

    ID   shift, and go to state 20
    NUM  shift, and go to state 21
    '('  shift, and go to state 117

    TERM    go to state 122
    FACTOR  go to state 38
    LIT     go to state 53


State 93

   98 TERM: TERM T_mul $@36 . FACTOR

    ID   shift, and go to state 20
    NUM  shift, and go to state 21
    '('  shift, and go to state 117

    FACTOR  go to state 123
    LIT     go to state 53


State 94

  100 TERM: TERM T_div $@37 . FACTOR

    ID   shift, and go to state 20
    NUM  shift, and go to state 21
    '('  shift, and go to state 117

    FACTOR  go to state 124
    LIT     go to state 53


State 95

   82 ASSIGN_EXPR: LIT $@28 T_eq . $@29 EXP

    $default  reduce using rule 81 ($@29)

    $@29  go to state 125


State 96

   85 ASSIGN_EXPR: TYPE LIT $@30 . T_eq $@31 EXP

    T_eq  shift, and go to state 126


State 97

   13 LOOPS: WHILE $@1 '(' COND . ')' $@2 LOOPBODY

    ')'  shift, and go to state 127


State 98

   62 COND: T_not B .

    $default  reduce using rule 62 (COND)


State 99

   73 B: '(' B . ')'

    ')'  shift, and go to state 128


State 100

   20 LOOPS: IF '(' COND ')' . $@6 LOOPBODY $@7 ELSE LOOPBODY

    $default  reduce using rule 18 ($@6)

    $@6  go to state 129


State 101

   59 COND: B T_and . $@19 COND

    $default  reduce using rule 58 ($@19)

    $@19  go to state 130


State 102

   61 COND: B $@20 . T_or COND

    T_or  shift, and go to state 131


State 103

   69 B: V T_lt . $@24 F

    $default  reduce using rule 68 ($@24)

    $@24  go to state 132


State 104

   67 B: V T_gt . $@23 F

    $default  reduce using rule 66 ($@23)

    $@23  go to state 133


State 105

   72 B: V T_not . $@25 T_eq $@26 LIT

    $default  reduce using rule 70 ($@25)

    $@25  go to state 134


State 106

   65 B: V T_eq . $@21 T_eq $@22 LIT

    $default  reduce using rule 63 ($@21)

    $@21  go to state 135


State 107

  103 PRINT: COUT T_lt T_lt STRING .
  104      | COUT T_lt T_lt STRING . T_lt T_lt ENDL

    T_lt  shift, and go to state 136

    $default  reduce using rule 103 (PRINT)


State 108

   17 LOOPS: FOR '(' ASSIGN_EXPR $@3 . ';' COND $@4 ';' statement $@5 ')' LOOPBODY

    ';'  shift, and go to state 137


State 109

   52 T_B: '(' T_B ')' .

    $default  reduce using rule 52 (T_B)


State 110

   24 TERNARY_EXPR: '(' TERNARY_COND ')' $@8 . T_ques statement $@9 T_colon statement

    T_ques  shift, and go to state 138


State 111

   38 TERNARY_COND: T_B T_and $@10 . TERNARY_COND

    ID     shift, and go to state 76
    T_not  shift, and go to state 47
    '('    shift, and go to state 77

    TERNARY_COND  go to state 139
    T_B           go to state 50
    T_V           go to state 51


State 112

   40 TERNARY_COND: T_B $@11 T_or . TERNARY_COND

    ID     shift, and go to state 76
    T_not  shift, and go to state 47
    '('    shift, and go to state 77

    TERNARY_COND  go to state 140
    T_B           go to state 50
    T_V           go to state 51


State 113

   48 T_B: T_V T_lt $@15 . T_F

    ID    shift, and go to state 20
    NUM   shift, and go to state 21
    T_eq  shift, and go to state 141

    T_F  go to state 142
    LIT  go to state 143


State 114

   46 T_B: T_V T_gt $@14 . T_F

    ID    shift, and go to state 20
    NUM   shift, and go to state 21
    T_eq  shift, and go to state 141

    T_F  go to state 144
    LIT  go to state 143


State 115

   51 T_B: T_V T_not $@16 . T_eq $@17 LIT

    T_eq  shift, and go to state 145


State 116

   44 T_B: T_V T_eq $@12 . T_eq $@13 LIT

    T_eq  shift, and go to state 146


State 117

  102 FACTOR: '(' . EXP ')'

    ID   shift, and go to state 20
    NUM  shift, and go to state 21
    '('  shift, and go to state 117

    EXP     go to state 52
    ADDSUB  go to state 36
    TERM    go to state 37
    FACTOR  go to state 38
    LIT     go to state 53


State 118

   88 EXP: EXP . T_lt $@32 ADDSUB
   90    | EXP . T_gt $@33 ADDSUB
   93 ADDSUB: EXP . T_pl $@34 TERM
   95       | EXP . T_min $@35 TERM

    T_lt   shift, and go to state 58
    T_gt   shift, and go to state 59
    T_pl   shift, and go to state 60
    T_min  shift, and go to state 61


State 119

   86 EXP: ADDSUB .
   88    | EXP T_lt $@32 ADDSUB .

    T_lt      reduce using rule 86 (EXP)
    T_lt      [reduce using rule 88 (EXP)]
    T_gt      reduce using rule 86 (EXP)
    T_gt      [reduce using rule 88 (EXP)]
    T_colon   reduce using rule 88 (EXP)
    T_pl      reduce using rule 86 (EXP)
    T_pl      [reduce using rule 88 (EXP)]
    T_min     reduce using rule 86 (EXP)
    T_min     [reduce using rule 88 (EXP)]
    ';'       reduce using rule 88 (EXP)
    ')'       reduce using rule 88 (EXP)
    $default  reduce using rule 86 (EXP)


State 120

   86 EXP: ADDSUB .
   90    | EXP T_gt $@33 ADDSUB .

    T_lt      reduce using rule 86 (EXP)
    T_lt      [reduce using rule 90 (EXP)]
    T_gt      reduce using rule 86 (EXP)
    T_gt      [reduce using rule 90 (EXP)]
    T_colon   reduce using rule 90 (EXP)
    T_pl      reduce using rule 86 (EXP)
    T_pl      [reduce using rule 90 (EXP)]
    T_min     reduce using rule 86 (EXP)
    T_min     [reduce using rule 90 (EXP)]
    ';'       reduce using rule 90 (EXP)
    ')'       reduce using rule 90 (EXP)
    $default  reduce using rule 86 (EXP)


State 121

   93 ADDSUB: EXP T_pl $@34 TERM .
   98 TERM: TERM . T_mul $@36 FACTOR
  100     | TERM . T_div $@37 FACTOR

    T_mul  shift, and go to state 62
    T_div  shift, and go to state 63

    $default  reduce using rule 93 (ADDSUB)


State 122

   95 ADDSUB: EXP T_min $@35 TERM .
   98 TERM: TERM . T_mul $@36 FACTOR
  100     | TERM . T_div $@37 FACTOR

    T_mul  shift, and go to state 62
    T_div  shift, and go to state 63

    $default  reduce using rule 95 (ADDSUB)


State 123

   98 TERM: TERM T_mul $@36 FACTOR .

    $default  reduce using rule 98 (TERM)


State 124

  100 TERM: TERM T_div $@37 FACTOR .

    $default  reduce using rule 100 (TERM)


State 125

   82 ASSIGN_EXPR: LIT $@28 T_eq $@29 . EXP

    ID   shift, and go to state 20
    NUM  shift, and go to state 21
    '('  shift, and go to state 117

    EXP     go to state 147
    ADDSUB  go to state 36
    TERM    go to state 37
    FACTOR  go to state 38
    LIT     go to state 53


State 126

   85 ASSIGN_EXPR: TYPE LIT $@30 T_eq . $@31 EXP

    $default  reduce using rule 84 ($@31)

    $@31  go to state 148


State 127

   13 LOOPS: WHILE $@1 '(' COND ')' . $@2 LOOPBODY

    $default  reduce using rule 12 ($@2)

    $@2  go to state 149


State 128

   73 B: '(' B ')' .

    $default  reduce using rule 73 (B)


State 129

   20 LOOPS: IF '(' COND ')' $@6 . LOOPBODY $@7 ELSE LOOPBODY

    ID     shift, and go to state 20
    NUM    shift, and go to state 21
    INT    shift, and go to state 23
    CHAR   shift, and go to state 24
    FLOAT  shift, and go to state 25
    COUT   shift, and go to state 27
    '{'    shift, and go to state 150
    ';'    shift, and go to state 151
    '('    shift, and go to state 29

    TERNARY_EXPR  go to state 32
    LOOPBODY      go to state 152
    statement     go to state 153
    ASSIGN_EXPR   go to state 34
    EXP           go to state 35
    ADDSUB        go to state 36
    TERM          go to state 37
    FACTOR        go to state 38
    PRINT         go to state 39
    LIT           go to state 40
    TYPE          go to state 41


State 130

   59 COND: B T_and $@19 . COND

    ID     shift, and go to state 67
    T_not  shift, and go to state 68
    '('    shift, and go to state 69

    COND  go to state 154
    B     go to state 71
    V     go to state 72


State 131

   61 COND: B $@20 T_or . COND

    ID     shift, and go to state 67
    T_not  shift, and go to state 68
    '('    shift, and go to state 69

    COND  go to state 155
    B     go to state 71
    V     go to state 72


State 132

   69 B: V T_lt $@24 . F

    ID    shift, and go to state 20
    NUM   shift, and go to state 21
    T_eq  shift, and go to state 156

    F    go to state 157
    LIT  go to state 158


State 133

   67 B: V T_gt $@23 . F

    ID    shift, and go to state 20
    NUM   shift, and go to state 21
    T_eq  shift, and go to state 156

    F    go to state 159
    LIT  go to state 158


State 134

   72 B: V T_not $@25 . T_eq $@26 LIT

    T_eq  shift, and go to state 160


State 135

   65 B: V T_eq $@21 . T_eq $@22 LIT

    T_eq  shift, and go to state 161


State 136

  104 PRINT: COUT T_lt T_lt STRING T_lt . T_lt ENDL

    T_lt  shift, and go to state 162


State 137

   17 LOOPS: FOR '(' ASSIGN_EXPR $@3 ';' . COND $@4 ';' statement $@5 ')' LOOPBODY

    ID     shift, and go to state 67
    T_not  shift, and go to state 68
    '('    shift, and go to state 69

    COND  go to state 163
    B     go to state 71
    V     go to state 72


State 138

   24 TERNARY_EXPR: '(' TERNARY_COND ')' $@8 T_ques . statement $@9 T_colon statement

    ID     shift, and go to state 20
    NUM    shift, and go to state 21
    INT    shift, and go to state 23
    CHAR   shift, and go to state 24
    FLOAT  shift, and go to state 25
    COUT   shift, and go to state 27
    '('    shift, and go to state 29

    TERNARY_EXPR  go to state 32
    statement     go to state 164
    ASSIGN_EXPR   go to state 34
    EXP           go to state 35
    ADDSUB        go to state 36
    TERM          go to state 37
    FACTOR        go to state 38
    PRINT         go to state 39
    LIT           go to state 40
    TYPE          go to state 41


State 139

   38 TERNARY_COND: T_B T_and $@10 TERNARY_COND .

    $default  reduce using rule 38 (TERNARY_COND)


State 140

   40 TERNARY_COND: T_B $@11 T_or TERNARY_COND .

    $default  reduce using rule 40 (TERNARY_COND)


State 141

   55 T_F: T_eq . $@18 LIT

    $default  reduce using rule 54 ($@18)

    $@18  go to state 165


State 142

   48 T_B: T_V T_lt $@15 T_F .

    $default  reduce using rule 48 (T_B)


State 143

   56 T_F: LIT .

    $default  reduce using rule 56 (T_F)


State 144

   46 T_B: T_V T_gt $@14 T_F .

    $default  reduce using rule 46 (T_B)


State 145

   51 T_B: T_V T_not $@16 T_eq . $@17 LIT

    $default  reduce using rule 50 ($@17)

    $@17  go to state 166


State 146

   44 T_B: T_V T_eq $@12 T_eq . $@13 LIT

    $default  reduce using rule 43 ($@13)

    $@13  go to state 167


State 147

   82 ASSIGN_EXPR: LIT $@28 T_eq $@29 EXP .
   88 EXP: EXP . T_lt $@32 ADDSUB
   90    | EXP . T_gt $@33 ADDSUB
   93 ADDSUB: EXP . T_pl $@34 TERM
   95       | EXP . T_min $@35 TERM

    T_lt   shift, and go to state 58
    T_gt   shift, and go to state 59
    T_pl   shift, and go to state 60
    T_min  shift, and go to state 61

    $default  reduce using rule 82 (ASSIGN_EXPR)


State 148

   85 ASSIGN_EXPR: TYPE LIT $@30 T_eq $@31 . EXP

    ID   shift, and go to state 20
    NUM  shift, and go to state 21
    '('  shift, and go to state 117

    EXP     go to state 168
    ADDSUB  go to state 36
    TERM    go to state 37
    FACTOR  go to state 38
    LIT     go to state 53


State 149

   13 LOOPS: WHILE $@1 '(' COND ')' $@2 . LOOPBODY

    ID     shift, and go to state 20
    NUM    shift, and go to state 21
    INT    shift, and go to state 23
    CHAR   shift, and go to state 24
    FLOAT  shift, and go to state 25
    COUT   shift, and go to state 27
    '{'    shift, and go to state 150
    ';'    shift, and go to state 151
    '('    shift, and go to state 29

    TERNARY_EXPR  go to state 32
    LOOPBODY      go to state 169
    statement     go to state 153
    ASSIGN_EXPR   go to state 34
    EXP           go to state 35
    ADDSUB        go to state 36
    TERM          go to state 37
    FACTOR        go to state 38
    PRINT         go to state 39
    LIT           go to state 40
    TYPE          go to state 41


State 150

   25 LOOPBODY: '{' . LOOPC '}'

    ID     shift, and go to state 20
    NUM    shift, and go to state 21
    WHILE  shift, and go to state 22
    INT    shift, and go to state 23
    CHAR   shift, and go to state 24
    FLOAT  shift, and go to state 25
    IF     shift, and go to state 26
    COUT   shift, and go to state 27
    FOR    shift, and go to state 28
    '('    shift, and go to state 29

    ID        [reduce using rule 21 (LOOPS)]
    NUM       [reduce using rule 21 (LOOPS)]
    WHILE     [reduce using rule 21 (LOOPS)]
    INT       [reduce using rule 21 (LOOPS)]
    CHAR      [reduce using rule 21 (LOOPS)]
    FLOAT     [reduce using rule 21 (LOOPS)]
    IF        [reduce using rule 21 (LOOPS)]
    COUT      [reduce using rule 21 (LOOPS)]
    FOR       [reduce using rule 21 (LOOPS)]
    '('       [reduce using rule 21 (LOOPS)]
    $default  reduce using rule 21 (LOOPS)

    LOOPS         go to state 170
    TERNARY_EXPR  go to state 32
    LOOPC         go to state 171
    statement     go to state 172
    ASSIGN_EXPR   go to state 34
    EXP           go to state 35
    ADDSUB        go to state 36
    TERM          go to state 37
    FACTOR        go to state 38
    PRINT         go to state 39
    LIT           go to state 40
    TYPE          go to state 41


State 151

   26 LOOPBODY: ';' .

    $default  reduce using rule 26 (LOOPBODY)


State 152

   20 LOOPS: IF '(' COND ')' $@6 LOOPBODY . $@7 ELSE LOOPBODY

    $default  reduce using rule 19 ($@7)

    $@7  go to state 173


State 153

   27 LOOPBODY: statement . ';'

    ';'  shift, and go to state 174


State 154

   59 COND: B T_and $@19 COND .

    $default  reduce using rule 59 (COND)


State 155

   61 COND: B $@20 T_or COND .

    $default  reduce using rule 61 (COND)


State 156

   76 F: T_eq . $@27 LIT

    $default  reduce using rule 75 ($@27)

    $@27  go to state 175


State 157

   69 B: V T_lt $@24 F .

    $default  reduce using rule 69 (B)


State 158

   77 F: LIT .

    $default  reduce using rule 77 (F)


State 159

   67 B: V T_gt $@23 F .

    $default  reduce using rule 67 (B)


State 160

   72 B: V T_not $@25 T_eq . $@26 LIT

    $default  reduce using rule 71 ($@26)

    $@26  go to state 176


State 161

   65 B: V T_eq $@21 T_eq . $@22 LIT

    $default  reduce using rule 64 ($@22)

    $@22  go to state 177


State 162

  104 PRINT: COUT T_lt T_lt STRING T_lt T_lt . ENDL

    ENDL  shift, and go to state 178


State 163

   17 LOOPS: FOR '(' ASSIGN_EXPR $@3 ';' COND . $@4 ';' statement $@5 ')' LOOPBODY

    $default  reduce using rule 15 ($@4)

    $@4  go to state 179


State 164

   24 TERNARY_EXPR: '(' TERNARY_COND ')' $@8 T_ques statement . $@9 T_colon statement

    $default  reduce using rule 23 ($@9)

    $@9  go to state 180


State 165

   55 T_F: T_eq $@18 . LIT

    ID   shift, and go to state 20
    NUM  shift, and go to state 21

    LIT  go to state 181


State 166

   51 T_B: T_V T_not $@16 T_eq $@17 . LIT

    ID   shift, and go to state 20
    NUM  shift, and go to state 21

    LIT  go to state 182


State 167

   44 T_B: T_V T_eq $@12 T_eq $@13 . LIT

    ID   shift, and go to state 20
    NUM  shift, and go to state 21

    LIT  go to state 183


State 168

   85 ASSIGN_EXPR: TYPE LIT $@30 T_eq $@31 EXP .
   88 EXP: EXP . T_lt $@32 ADDSUB
   90    | EXP . T_gt $@33 ADDSUB
   93 ADDSUB: EXP . T_pl $@34 TERM
   95       | EXP . T_min $@35 TERM

    T_lt   shift, and go to state 58
    T_gt   shift, and go to state 59
    T_pl   shift, and go to state 60
    T_min  shift, and go to state 61

    $default  reduce using rule 85 (ASSIGN_EXPR)


State 169

   13 LOOPS: WHILE $@1 '(' COND ')' $@2 LOOPBODY .

    $default  reduce using rule 13 (LOOPS)


State 170

   31 LOOPC: LOOPS .

    $default  reduce using rule 31 (LOOPC)


State 171

   25 LOOPBODY: '{' LOOPC . '}'
   28 LOOPC: LOOPC . statement ';'
   29      | LOOPC . LOOPS

    ID     shift, and go to state 20
    NUM    shift, and go to state 21
    WHILE  shift, and go to state 22
    INT    shift, and go to state 23
    CHAR   shift, and go to state 24
    FLOAT  shift, and go to state 25
    IF     shift, and go to state 26
    COUT   shift, and go to state 27
    FOR    shift, and go to state 28
    '}'    shift, and go to state 184
    '('    shift, and go to state 29

    ID     [reduce using rule 21 (LOOPS)]
    NUM    [reduce using rule 21 (LOOPS)]
    WHILE  [reduce using rule 21 (LOOPS)]
    INT    [reduce using rule 21 (LOOPS)]
    CHAR   [reduce using rule 21 (LOOPS)]
    FLOAT  [reduce using rule 21 (LOOPS)]
    IF     [reduce using rule 21 (LOOPS)]
    COUT   [reduce using rule 21 (LOOPS)]
    FOR    [reduce using rule 21 (LOOPS)]
    '}'    [reduce using rule 21 (LOOPS)]
    '('    [reduce using rule 21 (LOOPS)]

    LOOPS         go to state 185
    TERNARY_EXPR  go to state 32
    statement     go to state 186
    ASSIGN_EXPR   go to state 34
    EXP           go to state 35
    ADDSUB        go to state 36
    TERM          go to state 37
    FACTOR        go to state 38
    PRINT         go to state 39
    LIT           go to state 40
    TYPE          go to state 41


State 172

   30 LOOPC: statement . ';'

    ';'  shift, and go to state 187


State 173

   20 LOOPS: IF '(' COND ')' $@6 LOOPBODY $@7 . ELSE LOOPBODY

    ELSE  shift, and go to state 188


State 174

   27 LOOPBODY: statement ';' .

    $default  reduce using rule 27 (LOOPBODY)


State 175

   76 F: T_eq $@27 . LIT

    ID   shift, and go to state 20
    NUM  shift, and go to state 21

    LIT  go to state 189


State 176

   72 B: V T_not $@25 T_eq $@26 . LIT

    ID   shift, and go to state 20
    NUM  shift, and go to state 21

    LIT  go to state 190


State 177

   65 B: V T_eq $@21 T_eq $@22 . LIT

    ID   shift, and go to state 20
    NUM  shift, and go to state 21

    LIT  go to state 191


State 178

  104 PRINT: COUT T_lt T_lt STRING T_lt T_lt ENDL .

    $default  reduce using rule 104 (PRINT)


State 179

   17 LOOPS: FOR '(' ASSIGN_EXPR $@3 ';' COND $@4 . ';' statement $@5 ')' LOOPBODY

    ';'  shift, and go to state 192


State 180

   24 TERNARY_EXPR: '(' TERNARY_COND ')' $@8 T_ques statement $@9 . T_colon statement

    T_colon  shift, and go to state 193


State 181

   55 T_F: T_eq $@18 LIT .

    $default  reduce using rule 55 (T_F)


State 182

   51 T_B: T_V T_not $@16 T_eq $@17 LIT .

    $default  reduce using rule 51 (T_B)


State 183

   44 T_B: T_V T_eq $@12 T_eq $@13 LIT .

    $default  reduce using rule 44 (T_B)


State 184

   25 LOOPBODY: '{' LOOPC '}' .

    $default  reduce using rule 25 (LOOPBODY)


State 185

   29 LOOPC: LOOPC LOOPS .

    $default  reduce using rule 29 (LOOPC)


State 186

   28 LOOPC: LOOPC statement . ';'

    ';'  shift, and go to state 194


State 187

   30 LOOPC: statement ';' .

    $default  reduce using rule 30 (LOOPC)


State 188

   20 LOOPS: IF '(' COND ')' $@6 LOOPBODY $@7 ELSE . LOOPBODY

    ID     shift, and go to state 20
    NUM    shift, and go to state 21
    INT    shift, and go to state 23
    CHAR   shift, and go to state 24
    FLOAT  shift, and go to state 25
    COUT   shift, and go to state 27
    '{'    shift, and go to state 150
    ';'    shift, and go to state 151
    '('    shift, and go to state 29

    TERNARY_EXPR  go to state 32
    LOOPBODY      go to state 195
    statement     go to state 153
    ASSIGN_EXPR   go to state 34
    EXP           go to state 35
    ADDSUB        go to state 36
    TERM          go to state 37
    FACTOR        go to state 38
    PRINT         go to state 39
    LIT           go to state 40
    TYPE          go to state 41


State 189

   76 F: T_eq $@27 LIT .

    $default  reduce using rule 76 (F)


State 190

   72 B: V T_not $@25 T_eq $@26 LIT .

    $default  reduce using rule 72 (B)


State 191

   65 B: V T_eq $@21 T_eq $@22 LIT .

    $default  reduce using rule 65 (B)


State 192

   17 LOOPS: FOR '(' ASSIGN_EXPR $@3 ';' COND $@4 ';' . statement $@5 ')' LOOPBODY

    ID     shift, and go to state 20
    NUM    shift, and go to state 21
    INT    shift, and go to state 23
    CHAR   shift, and go to state 24
    FLOAT  shift, and go to state 25
    COUT   shift, and go to state 27
    '('    shift, and go to state 29

    TERNARY_EXPR  go to state 32
    statement     go to state 196
    ASSIGN_EXPR   go to state 34
    EXP           go to state 35
    ADDSUB        go to state 36
    TERM          go to state 37
    FACTOR        go to state 38
    PRINT         go to state 39
    LIT           go to state 40
    TYPE          go to state 41


State 193

   24 TERNARY_EXPR: '(' TERNARY_COND ')' $@8 T_ques statement $@9 T_colon . statement

    ID     shift, and go to state 20
    NUM    shift, and go to state 21
    INT    shift, and go to state 23
    CHAR   shift, and go to state 24
    FLOAT  shift, and go to state 25
    COUT   shift, and go to state 27
    '('    shift, and go to state 29

    TERNARY_EXPR  go to state 32
    statement     go to state 197
    ASSIGN_EXPR   go to state 34
    EXP           go to state 35
    ADDSUB        go to state 36
    TERM          go to state 37
    FACTOR        go to state 38
    PRINT         go to state 39
    LIT           go to state 40
    TYPE          go to state 41


State 194

   28 LOOPC: LOOPC statement ';' .

    $default  reduce using rule 28 (LOOPC)


State 195

   20 LOOPS: IF '(' COND ')' $@6 LOOPBODY $@7 ELSE LOOPBODY .

    $default  reduce using rule 20 (LOOPS)


State 196

   17 LOOPS: FOR '(' ASSIGN_EXPR $@3 ';' COND $@4 ';' statement . $@5 ')' LOOPBODY

    $default  reduce using rule 16 ($@5)

    $@5  go to state 198


State 197

   24 TERNARY_EXPR: '(' TERNARY_COND ')' $@8 T_ques statement $@9 T_colon statement .

    $default  reduce using rule 24 (TERNARY_EXPR)


State 198

   17 LOOPS: FOR '(' ASSIGN_EXPR $@3 ';' COND $@4 ';' statement $@5 . ')' LOOPBODY

    ')'  shift, and go to state 199


State 199

   17 LOOPS: FOR '(' ASSIGN_EXPR $@3 ';' COND $@4 ';' statement $@5 ')' . LOOPBODY

    ID     shift, and go to state 20
    NUM    shift, and go to state 21
    INT    shift, and go to state 23
    CHAR   shift, and go to state 24
    FLOAT  shift, and go to state 25
    COUT   shift, and go to state 27
    '{'    shift, and go to state 150
    ';'    shift, and go to state 151
    '('    shift, and go to state 29

    TERNARY_EXPR  go to state 32
    LOOPBODY      go to state 200
    statement     go to state 153
    ASSIGN_EXPR   go to state 34
    EXP           go to state 35
    ADDSUB        go to state 36
    TERM          go to state 37
    FACTOR        go to state 38
    PRINT         go to state 39
    LIT           go to state 40
    TYPE          go to state 41


State 200

   17 LOOPS: FOR '(' ASSIGN_EXPR $@3 ';' COND $@4 ';' statement $@5 ')' LOOPBODY .

    $default  reduce using rule 17 (LOOPS)
