Terminals unused in grammar

    T_lteq
    T_gteq
    T_neq
    T_noteq
    T_eqeq
    T_incr
    T_decr
    BREAK
    CONTINUE


State 42 conflicts: 3 reduce/reduce
State 115 conflicts: 4 reduce/reduce
State 116 conflicts: 4 reduce/reduce


Grammar

    0 $accept: S $end

    1 S: START

    2 START: INCLUDE T_lt H T_gt MAIN

    3 MAIN: VOID MAINTOK BODY
    4     | INT MAINTOK BODY

    5 BODY: T_LCBKT C T_RCBKT

    6 C: C statement T_SEMICOLON
    7  | C LOOPS
    8  | statement T_SEMICOLON
    9  | LOOPS

   10 $@1: %empty

   11 $@2: %empty

   12 LOOPS: WHILE $@1 T_LRBKT COND T_RRBKT $@2 LOOPBODY

   13 $@3: %empty

   14 $@4: %empty

   15 $@5: %empty

   16 LOOPS: FOR T_LRBKT ASSIGN_EXPR $@3 T_SEMICOLON COND $@4 T_SEMICOLON statement $@5 T_RRBKT LOOPBODY

   17 $@6: %empty

   18 $@7: %empty

   19 LOOPS: IF T_LRBKT COND T_RRBKT $@6 LOOPBODY $@7 ELSE LOOPBODY

   20 $@8: %empty

   21 $@9: %empty

   22 TERNARY_EXPR: T_LRBKT TERNARY_COND T_RRBKT $@8 T_ques statement $@9 T_colon statement

   23 LOOPBODY: T_LCBKT LOOPC T_RCBKT
   24         | T_SEMICOLON
   25         | statement T_SEMICOLON

   26 LOOPC: LOOPC statement T_SEMICOLON
   27      | LOOPC LOOPS
   28      | statement T_SEMICOLON
   29      | LOOPS

   30 statement: ASSIGN_EXPR
   31          | EXP
   32          | TERNARY_EXPR
   33          | PRINT

   34 TERNARY_COND: T_B

   35 $@10: %empty

   36 TERNARY_COND: T_B T_and $@10 TERNARY_COND

   37 $@11: %empty

   38 TERNARY_COND: T_B $@11 T_or TERNARY_COND
   39             | T_not T_B

   40 $@12: %empty

   41 $@13: %empty

   42 T_B: T_V T_eq $@12 T_eq $@13 LIT

   43 $@14: %empty

   44 T_B: T_V T_gt $@14 T_F

   45 $@15: %empty

   46 T_B: T_V T_lt $@15 T_F

   47 $@16: %empty

   48 $@17: %empty

   49 T_B: T_V T_not $@16 T_eq $@17 LIT
   50    | T_LRBKT T_B T_RRBKT
   51    | T_V

   52 $@18: %empty

   53 T_F: T_eq $@18 LIT
   54    | LIT

   55 COND: B

   56 $@19: %empty

   57 COND: B T_and $@19 COND

   58 $@20: %empty

   59 COND: B $@20 T_or COND
   60     | T_not B

   61 $@21: %empty

   62 $@22: %empty

   63 B: V T_eq $@21 T_eq $@22 LIT

   64 $@23: %empty

   65 B: V T_gt $@23 F

   66 $@24: %empty

   67 B: V T_lt $@24 F

   68 $@25: %empty

   69 $@26: %empty

   70 B: V T_not $@25 T_eq $@26 LIT
   71  | T_LRBKT B T_RRBKT
   72  | V

   73 $@27: %empty

   74 F: T_eq $@27 LIT
   75  | LIT

   76 V: ID

   77 T_V: ID

   78 $@28: %empty

   79 $@29: %empty

   80 ASSIGN_EXPR: LIT $@28 T_eq $@29 EXP

   81 $@30: %empty

   82 $@31: %empty

   83 ASSIGN_EXPR: TYPE LIT $@30 T_eq $@31 EXP

   84 EXP: ADDSUB

   85 $@32: %empty

   86 EXP: EXP T_lt $@32 ADDSUB

   87 $@33: %empty

   88 EXP: EXP T_gt $@33 ADDSUB

   89 ADDSUB: TERM

   90 $@34: %empty

   91 ADDSUB: EXP T_pl $@34 TERM

   92 $@35: %empty

   93 ADDSUB: EXP T_min $@35 TERM

   94 TERM: FACTOR

   95 $@36: %empty

   96 TERM: TERM T_mul $@36 FACTOR

   97 $@37: %empty

   98 TERM: TERM T_div $@37 FACTOR

   99 FACTOR: LIT
  100       | T_LRBKT EXP T_RRBKT

  101 PRINT: COUT T_lt T_lt STRING
  102      | COUT T_lt T_lt STRING T_lt T_lt ENDL

  103 LIT: ID
  104    | NUM

  105 TYPE: INT
  106     | CHAR
  107     | FLOAT


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID (258) 76 77 103
    NUM (259) 104
    T_lt (260) 2 46 67 86 101 102
    T_gt (261) 2 44 65 88
    T_lteq (262)
    T_gteq (263)
    T_neq (264)
    T_noteq (265)
    T_eqeq (266)
    T_and (267) 36 57
    T_or (268) 38 59
    T_incr (269)
    T_decr (270)
    T_not (271) 39 49 60 70
    T_eq (272) 42 49 53 63 70 74 80 83
    WHILE (273) 12
    INT (274) 4 105
    CHAR (275) 106
    FLOAT (276) 107
    VOID (277) 3
    H (278) 2
    MAINTOK (279) 3 4
    INCLUDE (280) 2
    BREAK (281)
    CONTINUE (282)
    IF (283) 19
    ELSE (284) 19
    COUT (285) 101 102
    STRING (286) 101 102
    FOR (287) 16
    ENDL (288) 102
    T_ques (289) 22
    T_colon (290) 22
    T_LCBKT (291) 5 23
    T_RCBKT (292) 5 23
    T_LRBKT (293) 12 16 19 22 50 71 100
    T_RRBKT (294) 12 16 19 22 50 71 100
    T_SEMICOLON (295) 6 8 16 24 25 26 28
    T_pl (296) 91
    T_min (297) 93
    T_mul (298) 96
    T_div (299) 98


Nonterminals, with rules where they appear

    $accept (45)
        on left: 0
    S (46)
        on left: 1
        on right: 0
    START (47)
        on left: 2
        on right: 1
    MAIN (48)
        on left: 3 4
        on right: 2
    BODY (49)
        on left: 5
        on right: 3 4
    C (50)
        on left: 6 7 8 9
        on right: 5 6 7
    LOOPS (51)
        on left: 12 16 19
        on right: 7 9 27 29
    $@1 (52)
        on left: 10
        on right: 12
    $@2 (53)
        on left: 11
        on right: 12
    $@3 (54)
        on left: 13
        on right: 16
    $@4 (55)
        on left: 14
        on right: 16
    $@5 (56)
        on left: 15
        on right: 16
    $@6 (57)
        on left: 17
        on right: 19
    $@7 (58)
        on left: 18
        on right: 19
    TERNARY_EXPR (59)
        on left: 22
        on right: 32
    $@8 (60)
        on left: 20
        on right: 22
    $@9 (61)
        on left: 21
        on right: 22
    LOOPBODY (62)
        on left: 23 24 25
        on right: 12 16 19
    LOOPC (63)
        on left: 26 27 28 29
        on right: 23 26 27
    statement (64)
        on left: 30 31 32 33
        on right: 6 8 16 22 25 26 28
    TERNARY_COND (65)
        on left: 34 36 38 39
        on right: 22 36 38
    $@10 (66)
        on left: 35
        on right: 36
    $@11 (67)
        on left: 37
        on right: 38
    T_B (68)
        on left: 42 44 46 49 50 51
        on right: 34 36 38 39 50
    $@12 (69)
        on left: 40
        on right: 42
    $@13 (70)
        on left: 41
        on right: 42
    $@14 (71)
        on left: 43
        on right: 44
    $@15 (72)
        on left: 45
        on right: 46
    $@16 (73)
        on left: 47
        on right: 49
    $@17 (74)
        on left: 48
        on right: 49
    T_F (75)
        on left: 53 54
        on right: 44 46
    $@18 (76)
        on left: 52
        on right: 53
    COND (77)
        on left: 55 57 59 60
        on right: 12 16 19 57 59
    $@19 (78)
        on left: 56
        on right: 57
    $@20 (79)
        on left: 58
        on right: 59
    B (80)
        on left: 63 65 67 70 71 72
        on right: 55 57 59 60 71
    $@21 (81)
        on left: 61
        on right: 63
    $@22 (82)
        on left: 62
        on right: 63
    $@23 (83)
        on left: 64
        on right: 65
    $@24 (84)
        on left: 66
        on right: 67
    $@25 (85)
        on left: 68
        on right: 70
    $@26 (86)
        on left: 69
        on right: 70
    F (87)
        on left: 74 75
        on right: 65 67
    $@27 (88)
        on left: 73
        on right: 74
    V (89)
        on left: 76
        on right: 63 65 67 70 72
    T_V (90)
        on left: 77
        on right: 42 44 46 49 51
    ASSIGN_EXPR (91)
        on left: 80 83
        on right: 16 30
    $@28 (92)
        on left: 78
        on right: 80
    $@29 (93)
        on left: 79
        on right: 80
    $@30 (94)
        on left: 81
        on right: 83
    $@31 (95)
        on left: 82
        on right: 83
    EXP (96)
        on left: 84 86 88
        on right: 31 80 83 86 88 91 93 100
    $@32 (97)
        on left: 85
        on right: 86
    $@33 (98)
        on left: 87
        on right: 88
    ADDSUB (99)
        on left: 89 91 93
        on right: 84 86 88
    $@34 (100)
        on left: 90
        on right: 91
    $@35 (101)
        on left: 92
        on right: 93
    TERM (102)
        on left: 94 96 98
        on right: 89 91 93 96 98
    $@36 (103)
        on left: 95
        on right: 96
    $@37 (104)
        on left: 97
        on right: 98
    FACTOR (105)
        on left: 99 100
        on right: 94 96 98
    PRINT (106)
        on left: 101 102
        on right: 33
    LIT (107)
        on left: 103 104
        on right: 42 49 53 54 63 70 74 75 80 83 99
    TYPE (108)
        on left: 105 106 107
        on right: 83


State 0

    0 $accept: . S $end

    INCLUDE  shift, and go to state 1

    S      go to state 2
    START  go to state 3


State 1

    2 START: INCLUDE . T_lt H T_gt MAIN

    T_lt  shift, and go to state 4


State 2

    0 $accept: S . $end

    $end  shift, and go to state 5


State 3

    1 S: START .

    $default  reduce using rule 1 (S)


State 4

    2 START: INCLUDE T_lt . H T_gt MAIN

    H  shift, and go to state 6


State 5

    0 $accept: S $end .

    $default  accept


State 6

    2 START: INCLUDE T_lt H . T_gt MAIN

    T_gt  shift, and go to state 7


State 7

    2 START: INCLUDE T_lt H T_gt . MAIN

    INT   shift, and go to state 8
    VOID  shift, and go to state 9

    MAIN  go to state 10


State 8

    4 MAIN: INT . MAINTOK BODY

    MAINTOK  shift, and go to state 11


State 9

    3 MAIN: VOID . MAINTOK BODY

    MAINTOK  shift, and go to state 12


State 10

    2 START: INCLUDE T_lt H T_gt MAIN .

    $default  reduce using rule 2 (START)


State 11

    4 MAIN: INT MAINTOK . BODY

    T_LCBKT  shift, and go to state 13

    BODY  go to state 14


State 12

    3 MAIN: VOID MAINTOK . BODY

    T_LCBKT  shift, and go to state 13

    BODY  go to state 15


State 13

    5 BODY: T_LCBKT . C T_RCBKT

    ID       shift, and go to state 16
    NUM      shift, and go to state 17
    WHILE    shift, and go to state 18
    INT      shift, and go to state 19
    CHAR     shift, and go to state 20
    FLOAT    shift, and go to state 21
    IF       shift, and go to state 22
    COUT     shift, and go to state 23
    FOR      shift, and go to state 24
    T_LRBKT  shift, and go to state 25

    C             go to state 26
    LOOPS         go to state 27
    TERNARY_EXPR  go to state 28
    statement     go to state 29
    ASSIGN_EXPR   go to state 30
    EXP           go to state 31
    ADDSUB        go to state 32
    TERM          go to state 33
    FACTOR        go to state 34
    PRINT         go to state 35
    LIT           go to state 36
    TYPE          go to state 37


State 14

    4 MAIN: INT MAINTOK BODY .

    $default  reduce using rule 4 (MAIN)


State 15

    3 MAIN: VOID MAINTOK BODY .

    $default  reduce using rule 3 (MAIN)


State 16

  103 LIT: ID .

    $default  reduce using rule 103 (LIT)


State 17

  104 LIT: NUM .

    $default  reduce using rule 104 (LIT)


State 18

   12 LOOPS: WHILE . $@1 T_LRBKT COND T_RRBKT $@2 LOOPBODY

    $default  reduce using rule 10 ($@1)

    $@1  go to state 38


State 19

  105 TYPE: INT .

    $default  reduce using rule 105 (TYPE)


State 20

  106 TYPE: CHAR .

    $default  reduce using rule 106 (TYPE)


State 21

  107 TYPE: FLOAT .

    $default  reduce using rule 107 (TYPE)


State 22

   19 LOOPS: IF . T_LRBKT COND T_RRBKT $@6 LOOPBODY $@7 ELSE LOOPBODY

    T_LRBKT  shift, and go to state 39


State 23

  101 PRINT: COUT . T_lt T_lt STRING
  102      | COUT . T_lt T_lt STRING T_lt T_lt ENDL

    T_lt  shift, and go to state 40


State 24

   16 LOOPS: FOR . T_LRBKT ASSIGN_EXPR $@3 T_SEMICOLON COND $@4 T_SEMICOLON statement $@5 T_RRBKT LOOPBODY

    T_LRBKT  shift, and go to state 41


State 25

   22 TERNARY_EXPR: T_LRBKT . TERNARY_COND T_RRBKT $@8 T_ques statement $@9 T_colon statement
  100 FACTOR: T_LRBKT . EXP T_RRBKT

    ID       shift, and go to state 42
    NUM      shift, and go to state 17
    T_not    shift, and go to state 43
    T_LRBKT  shift, and go to state 44

    TERNARY_COND  go to state 45
    T_B           go to state 46
    T_V           go to state 47
    EXP           go to state 48
    ADDSUB        go to state 32
    TERM          go to state 33
    FACTOR        go to state 34
    LIT           go to state 49


State 26

    5 BODY: T_LCBKT C . T_RCBKT
    6 C: C . statement T_SEMICOLON
    7  | C . LOOPS

    ID       shift, and go to state 16
    NUM      shift, and go to state 17
    WHILE    shift, and go to state 18
    INT      shift, and go to state 19
    CHAR     shift, and go to state 20
    FLOAT    shift, and go to state 21
    IF       shift, and go to state 22
    COUT     shift, and go to state 23
    FOR      shift, and go to state 24
    T_RCBKT  shift, and go to state 50
    T_LRBKT  shift, and go to state 25

    LOOPS         go to state 51
    TERNARY_EXPR  go to state 28
    statement     go to state 52
    ASSIGN_EXPR   go to state 30
    EXP           go to state 31
    ADDSUB        go to state 32
    TERM          go to state 33
    FACTOR        go to state 34
    PRINT         go to state 35
    LIT           go to state 36
    TYPE          go to state 37


State 27

    9 C: LOOPS .

    $default  reduce using rule 9 (C)


State 28

   32 statement: TERNARY_EXPR .

    $default  reduce using rule 32 (statement)


State 29

    8 C: statement . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 53


State 30

   30 statement: ASSIGN_EXPR .

    $default  reduce using rule 30 (statement)


State 31

   31 statement: EXP .
   86 EXP: EXP . T_lt $@32 ADDSUB
   88    | EXP . T_gt $@33 ADDSUB
   91 ADDSUB: EXP . T_pl $@34 TERM
   93       | EXP . T_min $@35 TERM

    T_lt   shift, and go to state 54
    T_gt   shift, and go to state 55
    T_pl   shift, and go to state 56
    T_min  shift, and go to state 57

    $default  reduce using rule 31 (statement)


State 32

   84 EXP: ADDSUB .

    $default  reduce using rule 84 (EXP)


State 33

   89 ADDSUB: TERM .
   96 TERM: TERM . T_mul $@36 FACTOR
   98     | TERM . T_div $@37 FACTOR

    T_mul  shift, and go to state 58
    T_div  shift, and go to state 59

    $default  reduce using rule 89 (ADDSUB)


State 34

   94 TERM: FACTOR .

    $default  reduce using rule 94 (TERM)


State 35

   33 statement: PRINT .

    $default  reduce using rule 33 (statement)


State 36

   80 ASSIGN_EXPR: LIT . $@28 T_eq $@29 EXP
   99 FACTOR: LIT .

    T_eq      reduce using rule 78 ($@28)
    $default  reduce using rule 99 (FACTOR)

    $@28  go to state 60


State 37

   83 ASSIGN_EXPR: TYPE . LIT $@30 T_eq $@31 EXP

    ID   shift, and go to state 16
    NUM  shift, and go to state 17

    LIT  go to state 61


State 38

   12 LOOPS: WHILE $@1 . T_LRBKT COND T_RRBKT $@2 LOOPBODY

    T_LRBKT  shift, and go to state 62


State 39

   19 LOOPS: IF T_LRBKT . COND T_RRBKT $@6 LOOPBODY $@7 ELSE LOOPBODY

    ID       shift, and go to state 63
    T_not    shift, and go to state 64
    T_LRBKT  shift, and go to state 65

    COND  go to state 66
    B     go to state 67
    V     go to state 68


State 40

  101 PRINT: COUT T_lt . T_lt STRING
  102      | COUT T_lt . T_lt STRING T_lt T_lt ENDL

    T_lt  shift, and go to state 69


State 41

   16 LOOPS: FOR T_LRBKT . ASSIGN_EXPR $@3 T_SEMICOLON COND $@4 T_SEMICOLON statement $@5 T_RRBKT LOOPBODY

    ID     shift, and go to state 16
    NUM    shift, and go to state 17
    INT    shift, and go to state 19
    CHAR   shift, and go to state 20
    FLOAT  shift, and go to state 21

    ASSIGN_EXPR  go to state 70
    LIT          go to state 71
    TYPE         go to state 37


State 42

   77 T_V: ID .
  103 LIT: ID .

    T_lt      reduce using rule 77 (T_V)
    T_lt      [reduce using rule 103 (LIT)]
    T_gt      reduce using rule 77 (T_V)
    T_gt      [reduce using rule 103 (LIT)]
    T_RRBKT   reduce using rule 77 (T_V)
    T_RRBKT   [reduce using rule 103 (LIT)]
    T_pl      reduce using rule 103 (LIT)
    T_min     reduce using rule 103 (LIT)
    T_mul     reduce using rule 103 (LIT)
    T_div     reduce using rule 103 (LIT)
    $default  reduce using rule 77 (T_V)


State 43

   39 TERNARY_COND: T_not . T_B

    ID       shift, and go to state 72
    T_LRBKT  shift, and go to state 73

    T_B  go to state 74
    T_V  go to state 47


State 44

   50 T_B: T_LRBKT . T_B T_RRBKT
  100 FACTOR: T_LRBKT . EXP T_RRBKT

    ID       shift, and go to state 42
    NUM      shift, and go to state 17
    T_LRBKT  shift, and go to state 44

    T_B     go to state 75
    T_V     go to state 47
    EXP     go to state 48
    ADDSUB  go to state 32
    TERM    go to state 33
    FACTOR  go to state 34
    LIT     go to state 49


State 45

   22 TERNARY_EXPR: T_LRBKT TERNARY_COND . T_RRBKT $@8 T_ques statement $@9 T_colon statement

    T_RRBKT  shift, and go to state 76


State 46

   34 TERNARY_COND: T_B .
   36             | T_B . T_and $@10 TERNARY_COND
   38             | T_B . $@11 T_or TERNARY_COND

    T_and  shift, and go to state 77

    T_or      reduce using rule 37 ($@11)
    $default  reduce using rule 34 (TERNARY_COND)

    $@11  go to state 78


State 47

   42 T_B: T_V . T_eq $@12 T_eq $@13 LIT
   44    | T_V . T_gt $@14 T_F
   46    | T_V . T_lt $@15 T_F
   49    | T_V . T_not $@16 T_eq $@17 LIT
   51    | T_V .

    T_lt   shift, and go to state 79
    T_gt   shift, and go to state 80
    T_not  shift, and go to state 81
    T_eq   shift, and go to state 82

    $default  reduce using rule 51 (T_B)


State 48

   86 EXP: EXP . T_lt $@32 ADDSUB
   88    | EXP . T_gt $@33 ADDSUB
   91 ADDSUB: EXP . T_pl $@34 TERM
   93       | EXP . T_min $@35 TERM
  100 FACTOR: T_LRBKT EXP . T_RRBKT

    T_lt     shift, and go to state 54
    T_gt     shift, and go to state 55
    T_RRBKT  shift, and go to state 83
    T_pl     shift, and go to state 56
    T_min    shift, and go to state 57


State 49

   99 FACTOR: LIT .

    $default  reduce using rule 99 (FACTOR)


State 50

    5 BODY: T_LCBKT C T_RCBKT .

    $default  reduce using rule 5 (BODY)


State 51

    7 C: C LOOPS .

    $default  reduce using rule 7 (C)


State 52

    6 C: C statement . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 84


State 53

    8 C: statement T_SEMICOLON .

    $default  reduce using rule 8 (C)


State 54

   86 EXP: EXP T_lt . $@32 ADDSUB

    $default  reduce using rule 85 ($@32)

    $@32  go to state 85


State 55

   88 EXP: EXP T_gt . $@33 ADDSUB

    $default  reduce using rule 87 ($@33)

    $@33  go to state 86


State 56

   91 ADDSUB: EXP T_pl . $@34 TERM

    $default  reduce using rule 90 ($@34)

    $@34  go to state 87


State 57

   93 ADDSUB: EXP T_min . $@35 TERM

    $default  reduce using rule 92 ($@35)

    $@35  go to state 88


State 58

   96 TERM: TERM T_mul . $@36 FACTOR

    $default  reduce using rule 95 ($@36)

    $@36  go to state 89


State 59

   98 TERM: TERM T_div . $@37 FACTOR

    $default  reduce using rule 97 ($@37)

    $@37  go to state 90


State 60

   80 ASSIGN_EXPR: LIT $@28 . T_eq $@29 EXP

    T_eq  shift, and go to state 91


State 61

   83 ASSIGN_EXPR: TYPE LIT . $@30 T_eq $@31 EXP

    $default  reduce using rule 81 ($@30)

    $@30  go to state 92


State 62

   12 LOOPS: WHILE $@1 T_LRBKT . COND T_RRBKT $@2 LOOPBODY

    ID       shift, and go to state 63
    T_not    shift, and go to state 64
    T_LRBKT  shift, and go to state 65

    COND  go to state 93
    B     go to state 67
    V     go to state 68


State 63

   76 V: ID .

    $default  reduce using rule 76 (V)


State 64

   60 COND: T_not . B

    ID       shift, and go to state 63
    T_LRBKT  shift, and go to state 65

    B  go to state 94
    V  go to state 68


State 65

   71 B: T_LRBKT . B T_RRBKT

    ID       shift, and go to state 63
    T_LRBKT  shift, and go to state 65

    B  go to state 95
    V  go to state 68


State 66

   19 LOOPS: IF T_LRBKT COND . T_RRBKT $@6 LOOPBODY $@7 ELSE LOOPBODY

    T_RRBKT  shift, and go to state 96


State 67

   55 COND: B .
   57     | B . T_and $@19 COND
   59     | B . $@20 T_or COND

    T_and  shift, and go to state 97

    T_or      reduce using rule 58 ($@20)
    $default  reduce using rule 55 (COND)

    $@20  go to state 98


State 68

   63 B: V . T_eq $@21 T_eq $@22 LIT
   65  | V . T_gt $@23 F
   67  | V . T_lt $@24 F
   70  | V . T_not $@25 T_eq $@26 LIT
   72  | V .

    T_lt   shift, and go to state 99
    T_gt   shift, and go to state 100
    T_not  shift, and go to state 101
    T_eq   shift, and go to state 102

    $default  reduce using rule 72 (B)


State 69

  101 PRINT: COUT T_lt T_lt . STRING
  102      | COUT T_lt T_lt . STRING T_lt T_lt ENDL

    STRING  shift, and go to state 103


State 70

   16 LOOPS: FOR T_LRBKT ASSIGN_EXPR . $@3 T_SEMICOLON COND $@4 T_SEMICOLON statement $@5 T_RRBKT LOOPBODY

    $default  reduce using rule 13 ($@3)

    $@3  go to state 104


State 71

   80 ASSIGN_EXPR: LIT . $@28 T_eq $@29 EXP

    $default  reduce using rule 78 ($@28)

    $@28  go to state 60


State 72

   77 T_V: ID .

    $default  reduce using rule 77 (T_V)


State 73

   50 T_B: T_LRBKT . T_B T_RRBKT

    ID       shift, and go to state 72
    T_LRBKT  shift, and go to state 73

    T_B  go to state 75
    T_V  go to state 47


State 74

   39 TERNARY_COND: T_not T_B .

    $default  reduce using rule 39 (TERNARY_COND)


State 75

   50 T_B: T_LRBKT T_B . T_RRBKT

    T_RRBKT  shift, and go to state 105


State 76

   22 TERNARY_EXPR: T_LRBKT TERNARY_COND T_RRBKT . $@8 T_ques statement $@9 T_colon statement

    $default  reduce using rule 20 ($@8)

    $@8  go to state 106


State 77

   36 TERNARY_COND: T_B T_and . $@10 TERNARY_COND

    $default  reduce using rule 35 ($@10)

    $@10  go to state 107


State 78

   38 TERNARY_COND: T_B $@11 . T_or TERNARY_COND

    T_or  shift, and go to state 108


State 79

   46 T_B: T_V T_lt . $@15 T_F

    $default  reduce using rule 45 ($@15)

    $@15  go to state 109


State 80

   44 T_B: T_V T_gt . $@14 T_F

    $default  reduce using rule 43 ($@14)

    $@14  go to state 110


State 81

   49 T_B: T_V T_not . $@16 T_eq $@17 LIT

    $default  reduce using rule 47 ($@16)

    $@16  go to state 111


State 82

   42 T_B: T_V T_eq . $@12 T_eq $@13 LIT

    $default  reduce using rule 40 ($@12)

    $@12  go to state 112


State 83

  100 FACTOR: T_LRBKT EXP T_RRBKT .

    $default  reduce using rule 100 (FACTOR)


State 84

    6 C: C statement T_SEMICOLON .

    $default  reduce using rule 6 (C)


State 85

   86 EXP: EXP T_lt $@32 . ADDSUB

    ID       shift, and go to state 16
    NUM      shift, and go to state 17
    T_LRBKT  shift, and go to state 113

    EXP     go to state 114
    ADDSUB  go to state 115
    TERM    go to state 33
    FACTOR  go to state 34
    LIT     go to state 49


State 86

   88 EXP: EXP T_gt $@33 . ADDSUB

    ID       shift, and go to state 16
    NUM      shift, and go to state 17
    T_LRBKT  shift, and go to state 113

    EXP     go to state 114
    ADDSUB  go to state 116
    TERM    go to state 33
    FACTOR  go to state 34
    LIT     go to state 49


State 87

   91 ADDSUB: EXP T_pl $@34 . TERM

    ID       shift, and go to state 16
    NUM      shift, and go to state 17
    T_LRBKT  shift, and go to state 113

    TERM    go to state 117
    FACTOR  go to state 34
    LIT     go to state 49


State 88

   93 ADDSUB: EXP T_min $@35 . TERM

    ID       shift, and go to state 16
    NUM      shift, and go to state 17
    T_LRBKT  shift, and go to state 113

    TERM    go to state 118
    FACTOR  go to state 34
    LIT     go to state 49


State 89

   96 TERM: TERM T_mul $@36 . FACTOR

    ID       shift, and go to state 16
    NUM      shift, and go to state 17
    T_LRBKT  shift, and go to state 113

    FACTOR  go to state 119
    LIT     go to state 49


State 90

   98 TERM: TERM T_div $@37 . FACTOR

    ID       shift, and go to state 16
    NUM      shift, and go to state 17
    T_LRBKT  shift, and go to state 113

    FACTOR  go to state 120
    LIT     go to state 49


State 91

   80 ASSIGN_EXPR: LIT $@28 T_eq . $@29 EXP

    $default  reduce using rule 79 ($@29)

    $@29  go to state 121


State 92

   83 ASSIGN_EXPR: TYPE LIT $@30 . T_eq $@31 EXP

    T_eq  shift, and go to state 122


State 93

   12 LOOPS: WHILE $@1 T_LRBKT COND . T_RRBKT $@2 LOOPBODY

    T_RRBKT  shift, and go to state 123


State 94

   60 COND: T_not B .

    $default  reduce using rule 60 (COND)


State 95

   71 B: T_LRBKT B . T_RRBKT

    T_RRBKT  shift, and go to state 124


State 96

   19 LOOPS: IF T_LRBKT COND T_RRBKT . $@6 LOOPBODY $@7 ELSE LOOPBODY

    $default  reduce using rule 17 ($@6)

    $@6  go to state 125


State 97

   57 COND: B T_and . $@19 COND

    $default  reduce using rule 56 ($@19)

    $@19  go to state 126


State 98

   59 COND: B $@20 . T_or COND

    T_or  shift, and go to state 127


State 99

   67 B: V T_lt . $@24 F

    $default  reduce using rule 66 ($@24)

    $@24  go to state 128


State 100

   65 B: V T_gt . $@23 F

    $default  reduce using rule 64 ($@23)

    $@23  go to state 129


State 101

   70 B: V T_not . $@25 T_eq $@26 LIT

    $default  reduce using rule 68 ($@25)

    $@25  go to state 130


State 102

   63 B: V T_eq . $@21 T_eq $@22 LIT

    $default  reduce using rule 61 ($@21)

    $@21  go to state 131


State 103

  101 PRINT: COUT T_lt T_lt STRING .
  102      | COUT T_lt T_lt STRING . T_lt T_lt ENDL

    T_lt  shift, and go to state 132

    $default  reduce using rule 101 (PRINT)


State 104

   16 LOOPS: FOR T_LRBKT ASSIGN_EXPR $@3 . T_SEMICOLON COND $@4 T_SEMICOLON statement $@5 T_RRBKT LOOPBODY

    T_SEMICOLON  shift, and go to state 133


State 105

   50 T_B: T_LRBKT T_B T_RRBKT .

    $default  reduce using rule 50 (T_B)


State 106

   22 TERNARY_EXPR: T_LRBKT TERNARY_COND T_RRBKT $@8 . T_ques statement $@9 T_colon statement

    T_ques  shift, and go to state 134


State 107

   36 TERNARY_COND: T_B T_and $@10 . TERNARY_COND

    ID       shift, and go to state 72
    T_not    shift, and go to state 43
    T_LRBKT  shift, and go to state 73

    TERNARY_COND  go to state 135
    T_B           go to state 46
    T_V           go to state 47


State 108

   38 TERNARY_COND: T_B $@11 T_or . TERNARY_COND

    ID       shift, and go to state 72
    T_not    shift, and go to state 43
    T_LRBKT  shift, and go to state 73

    TERNARY_COND  go to state 136
    T_B           go to state 46
    T_V           go to state 47


State 109

   46 T_B: T_V T_lt $@15 . T_F

    ID    shift, and go to state 16
    NUM   shift, and go to state 17
    T_eq  shift, and go to state 137

    T_F  go to state 138
    LIT  go to state 139


State 110

   44 T_B: T_V T_gt $@14 . T_F

    ID    shift, and go to state 16
    NUM   shift, and go to state 17
    T_eq  shift, and go to state 137

    T_F  go to state 140
    LIT  go to state 139


State 111

   49 T_B: T_V T_not $@16 . T_eq $@17 LIT

    T_eq  shift, and go to state 141


State 112

   42 T_B: T_V T_eq $@12 . T_eq $@13 LIT

    T_eq  shift, and go to state 142


State 113

  100 FACTOR: T_LRBKT . EXP T_RRBKT

    ID       shift, and go to state 16
    NUM      shift, and go to state 17
    T_LRBKT  shift, and go to state 113

    EXP     go to state 48
    ADDSUB  go to state 32
    TERM    go to state 33
    FACTOR  go to state 34
    LIT     go to state 49


State 114

   86 EXP: EXP . T_lt $@32 ADDSUB
   88    | EXP . T_gt $@33 ADDSUB
   91 ADDSUB: EXP . T_pl $@34 TERM
   93       | EXP . T_min $@35 TERM

    T_lt   shift, and go to state 54
    T_gt   shift, and go to state 55
    T_pl   shift, and go to state 56
    T_min  shift, and go to state 57


State 115

   84 EXP: ADDSUB .
   86    | EXP T_lt $@32 ADDSUB .

    T_lt         reduce using rule 84 (EXP)
    T_lt         [reduce using rule 86 (EXP)]
    T_gt         reduce using rule 84 (EXP)
    T_gt         [reduce using rule 86 (EXP)]
    T_colon      reduce using rule 86 (EXP)
    T_RRBKT      reduce using rule 86 (EXP)
    T_SEMICOLON  reduce using rule 86 (EXP)
    T_pl         reduce using rule 84 (EXP)
    T_pl         [reduce using rule 86 (EXP)]
    T_min        reduce using rule 84 (EXP)
    T_min        [reduce using rule 86 (EXP)]
    $default     reduce using rule 84 (EXP)


State 116

   84 EXP: ADDSUB .
   88    | EXP T_gt $@33 ADDSUB .

    T_lt         reduce using rule 84 (EXP)
    T_lt         [reduce using rule 88 (EXP)]
    T_gt         reduce using rule 84 (EXP)
    T_gt         [reduce using rule 88 (EXP)]
    T_colon      reduce using rule 88 (EXP)
    T_RRBKT      reduce using rule 88 (EXP)
    T_SEMICOLON  reduce using rule 88 (EXP)
    T_pl         reduce using rule 84 (EXP)
    T_pl         [reduce using rule 88 (EXP)]
    T_min        reduce using rule 84 (EXP)
    T_min        [reduce using rule 88 (EXP)]
    $default     reduce using rule 84 (EXP)


State 117

   91 ADDSUB: EXP T_pl $@34 TERM .
   96 TERM: TERM . T_mul $@36 FACTOR
   98     | TERM . T_div $@37 FACTOR

    T_mul  shift, and go to state 58
    T_div  shift, and go to state 59

    $default  reduce using rule 91 (ADDSUB)


State 118

   93 ADDSUB: EXP T_min $@35 TERM .
   96 TERM: TERM . T_mul $@36 FACTOR
   98     | TERM . T_div $@37 FACTOR

    T_mul  shift, and go to state 58
    T_div  shift, and go to state 59

    $default  reduce using rule 93 (ADDSUB)


State 119

   96 TERM: TERM T_mul $@36 FACTOR .

    $default  reduce using rule 96 (TERM)


State 120

   98 TERM: TERM T_div $@37 FACTOR .

    $default  reduce using rule 98 (TERM)


State 121

   80 ASSIGN_EXPR: LIT $@28 T_eq $@29 . EXP

    ID       shift, and go to state 16
    NUM      shift, and go to state 17
    T_LRBKT  shift, and go to state 113

    EXP     go to state 143
    ADDSUB  go to state 32
    TERM    go to state 33
    FACTOR  go to state 34
    LIT     go to state 49


State 122

   83 ASSIGN_EXPR: TYPE LIT $@30 T_eq . $@31 EXP

    $default  reduce using rule 82 ($@31)

    $@31  go to state 144


State 123

   12 LOOPS: WHILE $@1 T_LRBKT COND T_RRBKT . $@2 LOOPBODY

    $default  reduce using rule 11 ($@2)

    $@2  go to state 145


State 124

   71 B: T_LRBKT B T_RRBKT .

    $default  reduce using rule 71 (B)


State 125

   19 LOOPS: IF T_LRBKT COND T_RRBKT $@6 . LOOPBODY $@7 ELSE LOOPBODY

    ID           shift, and go to state 16
    NUM          shift, and go to state 17
    INT          shift, and go to state 19
    CHAR         shift, and go to state 20
    FLOAT        shift, and go to state 21
    COUT         shift, and go to state 23
    T_LCBKT      shift, and go to state 146
    T_LRBKT      shift, and go to state 25
    T_SEMICOLON  shift, and go to state 147

    TERNARY_EXPR  go to state 28
    LOOPBODY      go to state 148
    statement     go to state 149
    ASSIGN_EXPR   go to state 30
    EXP           go to state 31
    ADDSUB        go to state 32
    TERM          go to state 33
    FACTOR        go to state 34
    PRINT         go to state 35
    LIT           go to state 36
    TYPE          go to state 37


State 126

   57 COND: B T_and $@19 . COND

    ID       shift, and go to state 63
    T_not    shift, and go to state 64
    T_LRBKT  shift, and go to state 65

    COND  go to state 150
    B     go to state 67
    V     go to state 68


State 127

   59 COND: B $@20 T_or . COND

    ID       shift, and go to state 63
    T_not    shift, and go to state 64
    T_LRBKT  shift, and go to state 65

    COND  go to state 151
    B     go to state 67
    V     go to state 68


State 128

   67 B: V T_lt $@24 . F

    ID    shift, and go to state 16
    NUM   shift, and go to state 17
    T_eq  shift, and go to state 152

    F    go to state 153
    LIT  go to state 154


State 129

   65 B: V T_gt $@23 . F

    ID    shift, and go to state 16
    NUM   shift, and go to state 17
    T_eq  shift, and go to state 152

    F    go to state 155
    LIT  go to state 154


State 130

   70 B: V T_not $@25 . T_eq $@26 LIT

    T_eq  shift, and go to state 156


State 131

   63 B: V T_eq $@21 . T_eq $@22 LIT

    T_eq  shift, and go to state 157


State 132

  102 PRINT: COUT T_lt T_lt STRING T_lt . T_lt ENDL

    T_lt  shift, and go to state 158


State 133

   16 LOOPS: FOR T_LRBKT ASSIGN_EXPR $@3 T_SEMICOLON . COND $@4 T_SEMICOLON statement $@5 T_RRBKT LOOPBODY

    ID       shift, and go to state 63
    T_not    shift, and go to state 64
    T_LRBKT  shift, and go to state 65

    COND  go to state 159
    B     go to state 67
    V     go to state 68


State 134

   22 TERNARY_EXPR: T_LRBKT TERNARY_COND T_RRBKT $@8 T_ques . statement $@9 T_colon statement

    ID       shift, and go to state 16
    NUM      shift, and go to state 17
    INT      shift, and go to state 19
    CHAR     shift, and go to state 20
    FLOAT    shift, and go to state 21
    COUT     shift, and go to state 23
    T_LRBKT  shift, and go to state 25

    TERNARY_EXPR  go to state 28
    statement     go to state 160
    ASSIGN_EXPR   go to state 30
    EXP           go to state 31
    ADDSUB        go to state 32
    TERM          go to state 33
    FACTOR        go to state 34
    PRINT         go to state 35
    LIT           go to state 36
    TYPE          go to state 37


State 135

   36 TERNARY_COND: T_B T_and $@10 TERNARY_COND .

    $default  reduce using rule 36 (TERNARY_COND)


State 136

   38 TERNARY_COND: T_B $@11 T_or TERNARY_COND .

    $default  reduce using rule 38 (TERNARY_COND)


State 137

   53 T_F: T_eq . $@18 LIT

    $default  reduce using rule 52 ($@18)

    $@18  go to state 161


State 138

   46 T_B: T_V T_lt $@15 T_F .

    $default  reduce using rule 46 (T_B)


State 139

   54 T_F: LIT .

    $default  reduce using rule 54 (T_F)


State 140

   44 T_B: T_V T_gt $@14 T_F .

    $default  reduce using rule 44 (T_B)


State 141

   49 T_B: T_V T_not $@16 T_eq . $@17 LIT

    $default  reduce using rule 48 ($@17)

    $@17  go to state 162


State 142

   42 T_B: T_V T_eq $@12 T_eq . $@13 LIT

    $default  reduce using rule 41 ($@13)

    $@13  go to state 163


State 143

   80 ASSIGN_EXPR: LIT $@28 T_eq $@29 EXP .
   86 EXP: EXP . T_lt $@32 ADDSUB
   88    | EXP . T_gt $@33 ADDSUB
   91 ADDSUB: EXP . T_pl $@34 TERM
   93       | EXP . T_min $@35 TERM

    T_lt   shift, and go to state 54
    T_gt   shift, and go to state 55
    T_pl   shift, and go to state 56
    T_min  shift, and go to state 57

    $default  reduce using rule 80 (ASSIGN_EXPR)


State 144

   83 ASSIGN_EXPR: TYPE LIT $@30 T_eq $@31 . EXP

    ID       shift, and go to state 16
    NUM      shift, and go to state 17
    T_LRBKT  shift, and go to state 113

    EXP     go to state 164
    ADDSUB  go to state 32
    TERM    go to state 33
    FACTOR  go to state 34
    LIT     go to state 49


State 145

   12 LOOPS: WHILE $@1 T_LRBKT COND T_RRBKT $@2 . LOOPBODY

    ID           shift, and go to state 16
    NUM          shift, and go to state 17
    INT          shift, and go to state 19
    CHAR         shift, and go to state 20
    FLOAT        shift, and go to state 21
    COUT         shift, and go to state 23
    T_LCBKT      shift, and go to state 146
    T_LRBKT      shift, and go to state 25
    T_SEMICOLON  shift, and go to state 147

    TERNARY_EXPR  go to state 28
    LOOPBODY      go to state 165
    statement     go to state 149
    ASSIGN_EXPR   go to state 30
    EXP           go to state 31
    ADDSUB        go to state 32
    TERM          go to state 33
    FACTOR        go to state 34
    PRINT         go to state 35
    LIT           go to state 36
    TYPE          go to state 37


State 146

   23 LOOPBODY: T_LCBKT . LOOPC T_RCBKT

    ID       shift, and go to state 16
    NUM      shift, and go to state 17
    WHILE    shift, and go to state 18
    INT      shift, and go to state 19
    CHAR     shift, and go to state 20
    FLOAT    shift, and go to state 21
    IF       shift, and go to state 22
    COUT     shift, and go to state 23
    FOR      shift, and go to state 24
    T_LRBKT  shift, and go to state 25

    LOOPS         go to state 166
    TERNARY_EXPR  go to state 28
    LOOPC         go to state 167
    statement     go to state 168
    ASSIGN_EXPR   go to state 30
    EXP           go to state 31
    ADDSUB        go to state 32
    TERM          go to state 33
    FACTOR        go to state 34
    PRINT         go to state 35
    LIT           go to state 36
    TYPE          go to state 37


State 147

   24 LOOPBODY: T_SEMICOLON .

    $default  reduce using rule 24 (LOOPBODY)


State 148

   19 LOOPS: IF T_LRBKT COND T_RRBKT $@6 LOOPBODY . $@7 ELSE LOOPBODY

    $default  reduce using rule 18 ($@7)

    $@7  go to state 169


State 149

   25 LOOPBODY: statement . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 170


State 150

   57 COND: B T_and $@19 COND .

    $default  reduce using rule 57 (COND)


State 151

   59 COND: B $@20 T_or COND .

    $default  reduce using rule 59 (COND)


State 152

   74 F: T_eq . $@27 LIT

    $default  reduce using rule 73 ($@27)

    $@27  go to state 171


State 153

   67 B: V T_lt $@24 F .

    $default  reduce using rule 67 (B)


State 154

   75 F: LIT .

    $default  reduce using rule 75 (F)


State 155

   65 B: V T_gt $@23 F .

    $default  reduce using rule 65 (B)


State 156

   70 B: V T_not $@25 T_eq . $@26 LIT

    $default  reduce using rule 69 ($@26)

    $@26  go to state 172


State 157

   63 B: V T_eq $@21 T_eq . $@22 LIT

    $default  reduce using rule 62 ($@22)

    $@22  go to state 173


State 158

  102 PRINT: COUT T_lt T_lt STRING T_lt T_lt . ENDL

    ENDL  shift, and go to state 174


State 159

   16 LOOPS: FOR T_LRBKT ASSIGN_EXPR $@3 T_SEMICOLON COND . $@4 T_SEMICOLON statement $@5 T_RRBKT LOOPBODY

    $default  reduce using rule 14 ($@4)

    $@4  go to state 175


State 160

   22 TERNARY_EXPR: T_LRBKT TERNARY_COND T_RRBKT $@8 T_ques statement . $@9 T_colon statement

    $default  reduce using rule 21 ($@9)

    $@9  go to state 176


State 161

   53 T_F: T_eq $@18 . LIT

    ID   shift, and go to state 16
    NUM  shift, and go to state 17

    LIT  go to state 177


State 162

   49 T_B: T_V T_not $@16 T_eq $@17 . LIT

    ID   shift, and go to state 16
    NUM  shift, and go to state 17

    LIT  go to state 178


State 163

   42 T_B: T_V T_eq $@12 T_eq $@13 . LIT

    ID   shift, and go to state 16
    NUM  shift, and go to state 17

    LIT  go to state 179


State 164

   83 ASSIGN_EXPR: TYPE LIT $@30 T_eq $@31 EXP .
   86 EXP: EXP . T_lt $@32 ADDSUB
   88    | EXP . T_gt $@33 ADDSUB
   91 ADDSUB: EXP . T_pl $@34 TERM
   93       | EXP . T_min $@35 TERM

    T_lt   shift, and go to state 54
    T_gt   shift, and go to state 55
    T_pl   shift, and go to state 56
    T_min  shift, and go to state 57

    $default  reduce using rule 83 (ASSIGN_EXPR)


State 165

   12 LOOPS: WHILE $@1 T_LRBKT COND T_RRBKT $@2 LOOPBODY .

    $default  reduce using rule 12 (LOOPS)


State 166

   29 LOOPC: LOOPS .

    $default  reduce using rule 29 (LOOPC)


State 167

   23 LOOPBODY: T_LCBKT LOOPC . T_RCBKT
   26 LOOPC: LOOPC . statement T_SEMICOLON
   27      | LOOPC . LOOPS

    ID       shift, and go to state 16
    NUM      shift, and go to state 17
    WHILE    shift, and go to state 18
    INT      shift, and go to state 19
    CHAR     shift, and go to state 20
    FLOAT    shift, and go to state 21
    IF       shift, and go to state 22
    COUT     shift, and go to state 23
    FOR      shift, and go to state 24
    T_RCBKT  shift, and go to state 180
    T_LRBKT  shift, and go to state 25

    LOOPS         go to state 181
    TERNARY_EXPR  go to state 28
    statement     go to state 182
    ASSIGN_EXPR   go to state 30
    EXP           go to state 31
    ADDSUB        go to state 32
    TERM          go to state 33
    FACTOR        go to state 34
    PRINT         go to state 35
    LIT           go to state 36
    TYPE          go to state 37


State 168

   28 LOOPC: statement . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 183


State 169

   19 LOOPS: IF T_LRBKT COND T_RRBKT $@6 LOOPBODY $@7 . ELSE LOOPBODY

    ELSE  shift, and go to state 184


State 170

   25 LOOPBODY: statement T_SEMICOLON .

    $default  reduce using rule 25 (LOOPBODY)


State 171

   74 F: T_eq $@27 . LIT

    ID   shift, and go to state 16
    NUM  shift, and go to state 17

    LIT  go to state 185


State 172

   70 B: V T_not $@25 T_eq $@26 . LIT

    ID   shift, and go to state 16
    NUM  shift, and go to state 17

    LIT  go to state 186


State 173

   63 B: V T_eq $@21 T_eq $@22 . LIT

    ID   shift, and go to state 16
    NUM  shift, and go to state 17

    LIT  go to state 187


State 174

  102 PRINT: COUT T_lt T_lt STRING T_lt T_lt ENDL .

    $default  reduce using rule 102 (PRINT)


State 175

   16 LOOPS: FOR T_LRBKT ASSIGN_EXPR $@3 T_SEMICOLON COND $@4 . T_SEMICOLON statement $@5 T_RRBKT LOOPBODY

    T_SEMICOLON  shift, and go to state 188


State 176

   22 TERNARY_EXPR: T_LRBKT TERNARY_COND T_RRBKT $@8 T_ques statement $@9 . T_colon statement

    T_colon  shift, and go to state 189


State 177

   53 T_F: T_eq $@18 LIT .

    $default  reduce using rule 53 (T_F)


State 178

   49 T_B: T_V T_not $@16 T_eq $@17 LIT .

    $default  reduce using rule 49 (T_B)


State 179

   42 T_B: T_V T_eq $@12 T_eq $@13 LIT .

    $default  reduce using rule 42 (T_B)


State 180

   23 LOOPBODY: T_LCBKT LOOPC T_RCBKT .

    $default  reduce using rule 23 (LOOPBODY)


State 181

   27 LOOPC: LOOPC LOOPS .

    $default  reduce using rule 27 (LOOPC)


State 182

   26 LOOPC: LOOPC statement . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 190


State 183

   28 LOOPC: statement T_SEMICOLON .

    $default  reduce using rule 28 (LOOPC)


State 184

   19 LOOPS: IF T_LRBKT COND T_RRBKT $@6 LOOPBODY $@7 ELSE . LOOPBODY

    ID           shift, and go to state 16
    NUM          shift, and go to state 17
    INT          shift, and go to state 19
    CHAR         shift, and go to state 20
    FLOAT        shift, and go to state 21
    COUT         shift, and go to state 23
    T_LCBKT      shift, and go to state 146
    T_LRBKT      shift, and go to state 25
    T_SEMICOLON  shift, and go to state 147

    TERNARY_EXPR  go to state 28
    LOOPBODY      go to state 191
    statement     go to state 149
    ASSIGN_EXPR   go to state 30
    EXP           go to state 31
    ADDSUB        go to state 32
    TERM          go to state 33
    FACTOR        go to state 34
    PRINT         go to state 35
    LIT           go to state 36
    TYPE          go to state 37


State 185

   74 F: T_eq $@27 LIT .

    $default  reduce using rule 74 (F)


State 186

   70 B: V T_not $@25 T_eq $@26 LIT .

    $default  reduce using rule 70 (B)


State 187

   63 B: V T_eq $@21 T_eq $@22 LIT .

    $default  reduce using rule 63 (B)


State 188

   16 LOOPS: FOR T_LRBKT ASSIGN_EXPR $@3 T_SEMICOLON COND $@4 T_SEMICOLON . statement $@5 T_RRBKT LOOPBODY

    ID       shift, and go to state 16
    NUM      shift, and go to state 17
    INT      shift, and go to state 19
    CHAR     shift, and go to state 20
    FLOAT    shift, and go to state 21
    COUT     shift, and go to state 23
    T_LRBKT  shift, and go to state 25

    TERNARY_EXPR  go to state 28
    statement     go to state 192
    ASSIGN_EXPR   go to state 30
    EXP           go to state 31
    ADDSUB        go to state 32
    TERM          go to state 33
    FACTOR        go to state 34
    PRINT         go to state 35
    LIT           go to state 36
    TYPE          go to state 37


State 189

   22 TERNARY_EXPR: T_LRBKT TERNARY_COND T_RRBKT $@8 T_ques statement $@9 T_colon . statement

    ID       shift, and go to state 16
    NUM      shift, and go to state 17
    INT      shift, and go to state 19
    CHAR     shift, and go to state 20
    FLOAT    shift, and go to state 21
    COUT     shift, and go to state 23
    T_LRBKT  shift, and go to state 25

    TERNARY_EXPR  go to state 28
    statement     go to state 193
    ASSIGN_EXPR   go to state 30
    EXP           go to state 31
    ADDSUB        go to state 32
    TERM          go to state 33
    FACTOR        go to state 34
    PRINT         go to state 35
    LIT           go to state 36
    TYPE          go to state 37


State 190

   26 LOOPC: LOOPC statement T_SEMICOLON .

    $default  reduce using rule 26 (LOOPC)


State 191

   19 LOOPS: IF T_LRBKT COND T_RRBKT $@6 LOOPBODY $@7 ELSE LOOPBODY .

    $default  reduce using rule 19 (LOOPS)


State 192

   16 LOOPS: FOR T_LRBKT ASSIGN_EXPR $@3 T_SEMICOLON COND $@4 T_SEMICOLON statement . $@5 T_RRBKT LOOPBODY

    $default  reduce using rule 15 ($@5)

    $@5  go to state 194


State 193

   22 TERNARY_EXPR: T_LRBKT TERNARY_COND T_RRBKT $@8 T_ques statement $@9 T_colon statement .

    $default  reduce using rule 22 (TERNARY_EXPR)


State 194

   16 LOOPS: FOR T_LRBKT ASSIGN_EXPR $@3 T_SEMICOLON COND $@4 T_SEMICOLON statement $@5 . T_RRBKT LOOPBODY

    T_RRBKT  shift, and go to state 195


State 195

   16 LOOPS: FOR T_LRBKT ASSIGN_EXPR $@3 T_SEMICOLON COND $@4 T_SEMICOLON statement $@5 T_RRBKT . LOOPBODY

    ID           shift, and go to state 16
    NUM          shift, and go to state 17
    INT          shift, and go to state 19
    CHAR         shift, and go to state 20
    FLOAT        shift, and go to state 21
    COUT         shift, and go to state 23
    T_LCBKT      shift, and go to state 146
    T_LRBKT      shift, and go to state 25
    T_SEMICOLON  shift, and go to state 147

    TERNARY_EXPR  go to state 28
    LOOPBODY      go to state 196
    statement     go to state 149
    ASSIGN_EXPR   go to state 30
    EXP           go to state 31
    ADDSUB        go to state 32
    TERM          go to state 33
    FACTOR        go to state 34
    PRINT         go to state 35
    LIT           go to state 36
    TYPE          go to state 37


State 196

   16 LOOPS: FOR T_LRBKT ASSIGN_EXPR $@3 T_SEMICOLON COND $@4 T_SEMICOLON statement $@5 T_RRBKT LOOPBODY .

    $default  reduce using rule 16 (LOOPS)
